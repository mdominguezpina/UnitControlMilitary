/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package interfaz;

import clases.Consultas;
import clases.Personal;
import clases.PersonalClass;
import clases.PersonalVehiculosClass;
import clases.TelefonosClass;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Manuel
 */
public class PersonalUI extends javax.swing.JFrame {

    //Creamos los objetos que nos harán falta para añadirle funcionalidad a la interfaz
    PersonalClass personalClass = new PersonalClass();
    PersonalVehiculosClass personalVehiculoClass = new PersonalVehiculosClass();
    TelefonosClass telefonoClass = new TelefonosClass();
    Personal personal = new Personal();
    DefaultTableModel tablaModelo;
    VehiculosUI vehiculosUI;
    ArmamentoUI armamentoUI;
    TransmisionesUI transmisionesUI;
    ConsultaUI consultasUI;
    MenuUI menuUI;
    Consultas consultas = new Consultas();
    
    

    public PersonalUI() {
        initComponents();
        //setIconImage(new ImageIcon(getClass().getResource("/Img/Insignia militar.png")).getImage());
        this.setLocationRelativeTo(null);
        textIdPerVeh.setEditable(false);
        textIdTel.setEditable(false);
        
    }
    

    public void listaDePersonal(){
        
        //Creamos una lista, y la tabla para listar el personal 
        List <PersonalClass> listaPersonal = personal.listaPersonal();
        tablaModelo = (DefaultTableModel) tablaPersonal.getModel();
        Object[] object = new Object[7];
        
        tablaModelo.setRowCount(0);
        
        for (int i = 0; i < listaPersonal.size(); i++) {
            
            //Recorremos los registros, añadiendolos al Object
            object[0] = listaPersonal.get(i).getTIM();
            object[1] = listaPersonal.get(i).getNombre();
            object[2] = listaPersonal.get(i).getPrimerApellido();
            object[3] = listaPersonal.get(i).getSegundoApellido();
            object[4] = listaPersonal.get(i).getDNI();
            object[5] = listaPersonal.get(i).getRango();
            object[6] = listaPersonal.get(i).getEstado();
            
            //Añadimos el objeto a la tabla 
            tablaModelo.addRow(object);
            
        }
        
        //Añadimos la tabla, a la tabla de nuestra interfaz 
        tablaPersonal.setModel(tablaModelo);
         
    }
    
    public void listaDePersonalVehiculo(){
        
        //Creamos una lista, y la tabla para listar el personalVehiculo
        List <PersonalVehiculosClass> listapersonalVehiculo = personal.listaPersonalVehiculo();
        tablaModelo = (DefaultTableModel) tablaPersonalVehiculo.getModel();
        Object[] object = new Object[3];
        
        tablaModelo.setRowCount(0);
        
         for (int i = 0; i < listapersonalVehiculo.size(); i++) {
            
            //Recorremos los registros, añadiendolos al Object
            object[0] = listapersonalVehiculo.get(i).getId();
            object[1] = listapersonalVehiculo.get(i).getTIM();
            object[2] = listapersonalVehiculo.get(i).getMatriculaVehiculo();
            
            //Añadimos el objeto a la tabla 
            tablaModelo.addRow(object);
            
        }
        
        //Añadimos la tabla, a la tabla de nuestra interfaz 
        tablaPersonalVehiculo.setModel(tablaModelo);
        
    }
    
    public void listaDeTelefono(){
        
        //Creamos una lista, y la tabla para listar el personalVehiculo
        List <TelefonosClass> listaTelefono = personal.listaTelefono();
        tablaModelo = (DefaultTableModel) tablaTelefono.getModel();
        Object[] object = new Object[3];
        
        tablaModelo.setRowCount(0);
        
        //Recorremos los registros, añadiendolos al Object
        for (int i = 0; i < listaTelefono.size(); i++) {
            
            object[0] = listaTelefono.get(i).getId();
            object[1] = listaTelefono.get(i).getNumeroTelefono();
            object[2] = listaTelefono.get(i).getTIM();
            
            //Añadimos el objeto a la tabla 
            tablaModelo.addRow(object);
            
        }
        //Añadimos la tabla, a la tabla de nuestra interfaz 
        tablaTelefono.setModel(tablaModelo);
  
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        botonMenu = new javax.swing.JButton();
        botonTransmisiones = new javax.swing.JButton();
        botonConsultas = new javax.swing.JButton();
        botonVehiculos = new javax.swing.JButton();
        botonArmamento = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        pestañaPersonal = new javax.swing.JPanel();
        textEstPer = new javax.swing.JTextField();
        textRanPer = new javax.swing.JTextField();
        textDniPer = new javax.swing.JTextField();
        textTimPer = new javax.swing.JTextField();
        textNomPer = new javax.swing.JTextField();
        textApPer1 = new javax.swing.JTextField();
        textApPer2 = new javax.swing.JTextField();
        ModificarPersonal = new javax.swing.JButton();
        insertPersonal = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaPersonal = new javax.swing.JTable();
        BotonRegistros = new javax.swing.JButton();
        eliminarPersonal = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        pestañaPersonalVehiculos = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        insertPersonalVehiculo = new javax.swing.JButton();
        modificarPersonalVehiculo = new javax.swing.JButton();
        textIdPerVeh = new javax.swing.JTextField();
        textTimPerVeh = new javax.swing.JTextField();
        textMatPerVeh = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaPersonalVehiculo = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        eliminarPersonalVehiculo = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        pestañaTelefonos = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        insertarTelefono = new javax.swing.JButton();
        modificarTelefono = new javax.swing.JButton();
        textIdTel = new javax.swing.JTextField();
        textTel = new javax.swing.JTextField();
        textTimTel = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaTelefono = new javax.swing.JTable();
        jButton8 = new javax.swing.JButton();
        eliminarTelefono = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(0, 51, 51));

        botonMenu.setFont(new java.awt.Font("Verdana Pro Cond", 0, 12)); // NOI18N
        botonMenu.setText("Menu");
        botonMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonMenuActionPerformed(evt);
            }
        });

        botonTransmisiones.setFont(new java.awt.Font("Verdana Pro Cond", 0, 12)); // NOI18N
        botonTransmisiones.setText("Transmisiones");
        botonTransmisiones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonTransmisionesActionPerformed(evt);
            }
        });

        botonConsultas.setFont(new java.awt.Font("Verdana Pro Cond", 0, 12)); // NOI18N
        botonConsultas.setText("Consultas");
        botonConsultas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonConsultasActionPerformed(evt);
            }
        });

        botonVehiculos.setFont(new java.awt.Font("Verdana Pro Cond", 0, 12)); // NOI18N
        botonVehiculos.setText("Vehiculos");
        botonVehiculos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonVehiculosActionPerformed(evt);
            }
        });

        botonArmamento.setFont(new java.awt.Font("Verdana Pro Cond", 0, 12)); // NOI18N
        botonArmamento.setText("Armamento ");
        botonArmamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonArmamentoActionPerformed(evt);
            }
        });

        pestañaPersonal.setBackground(new java.awt.Color(0, 102, 102));

        textRanPer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textRanPerActionPerformed(evt);
            }
        });

        ModificarPersonal.setFont(new java.awt.Font("Verdana Pro Cond", 0, 12)); // NOI18N
        ModificarPersonal.setText("Modificar");
        ModificarPersonal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModificarPersonalActionPerformed(evt);
            }
        });

        insertPersonal.setFont(new java.awt.Font("Verdana Pro Cond", 0, 12)); // NOI18N
        insertPersonal.setText("Insertar");
        insertPersonal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertPersonalActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Verdana Pro Cond", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Primer apellido");

        jLabel1.setFont(new java.awt.Font("Verdana Pro Cond", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Nombre");

        jLabel4.setFont(new java.awt.Font("Verdana Pro Cond", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("TIM");

        jLabel3.setFont(new java.awt.Font("Verdana Pro Cond", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Segundo apellido");

        jLabel5.setFont(new java.awt.Font("Verdana Pro Cond", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("DNI");

        jLabel6.setFont(new java.awt.Font("Verdana Pro Cond", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Estado");

        jLabel7.setFont(new java.awt.Font("Verdana Pro Cond", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Rango");

        tablaPersonal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "TIM", "Nombre", "Primer apellido", "Segundo apellido", "DNI", "Rango", "Estado"
            }
        ));
        tablaPersonal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaPersonalMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaPersonal);

        BotonRegistros.setFont(new java.awt.Font("Verdana Pro Cond", 0, 12)); // NOI18N
        BotonRegistros.setText("Registros");
        BotonRegistros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonRegistrosActionPerformed(evt);
            }
        });

        eliminarPersonal.setFont(new java.awt.Font("Verdana Pro Cond", 0, 12)); // NOI18N
        eliminarPersonal.setText("Eliminar");
        eliminarPersonal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarPersonalActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Verdana Pro Cond", 1, 12)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 0, 0));
        jLabel17.setText("*Campo TIM: 11 números y una letra");

        jLabel18.setFont(new java.awt.Font("Verdana Pro Cond", 1, 12)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 0, 0));
        jLabel18.setText("*Campo DNI: 8 numeros y una letra");

        javax.swing.GroupLayout pestañaPersonalLayout = new javax.swing.GroupLayout(pestañaPersonal);
        pestañaPersonal.setLayout(pestañaPersonalLayout);
        pestañaPersonalLayout.setHorizontalGroup(
            pestañaPersonalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pestañaPersonalLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(pestañaPersonalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pestañaPersonalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pestañaPersonalLayout.createSequentialGroup()
                        .addGroup(pestañaPersonalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pestañaPersonalLayout.createSequentialGroup()
                                .addComponent(textNomPer, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addGroup(pestañaPersonalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pestañaPersonalLayout.createSequentialGroup()
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(textApPer1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(28, 28, 28)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(textDniPer, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(27, 27, 27)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(textEstPer, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(pestañaPersonalLayout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(18, 18, 18)
                                        .addComponent(textApPer2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(28, 28, 28)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(textRanPer, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(textTimPer, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                        .addGroup(pestañaPersonalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ModificarPersonal)
                            .addComponent(insertPersonal))
                        .addGap(18, 18, 18)
                        .addGroup(pestañaPersonalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(eliminarPersonal)
                            .addComponent(BotonRegistros))
                        .addGap(26, 26, 26))
                    .addGroup(pestañaPersonalLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 838, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(pestañaPersonalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pestañaPersonalLayout.setVerticalGroup(
            pestañaPersonalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pestañaPersonalLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(pestañaPersonalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pestañaPersonalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(textTimPer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)
                        .addComponent(jLabel2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pestañaPersonalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(textApPer1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)
                        .addComponent(textDniPer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6)
                        .addComponent(textEstPer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(insertPersonal)
                        .addComponent(eliminarPersonal)))
                .addGroup(pestañaPersonalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pestañaPersonalLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(pestañaPersonalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(textApPer2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textNomPer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel7)))
                    .addGroup(pestañaPersonalLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(textRanPer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pestañaPersonalLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(pestañaPersonalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BotonRegistros)
                            .addComponent(ModificarPersonal))))
                .addGap(36, 36, 36)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addGroup(pestañaPersonalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(jLabel18))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Personal", pestañaPersonal);

        pestañaPersonalVehiculos.setBackground(new java.awt.Color(0, 102, 102));

        jLabel8.setText("ID");

        jLabel9.setText("TIM");

        jLabel10.setText("Matrícula");

        insertPersonalVehiculo.setText("Insertar");
        insertPersonalVehiculo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertPersonalVehiculoActionPerformed(evt);
            }
        });

        modificarPersonalVehiculo.setText("Modificar");
        modificarPersonalVehiculo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarPersonalVehiculoActionPerformed(evt);
            }
        });

        textIdPerVeh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textIdPerVehActionPerformed(evt);
            }
        });

        tablaPersonalVehiculo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "TIM", "Matrícula"
            }
        ));
        tablaPersonalVehiculo.setMinimumSize(new java.awt.Dimension(105, 0));
        tablaPersonalVehiculo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaPersonalVehiculoMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tablaPersonalVehiculo);

        jButton2.setText("Registros");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        eliminarPersonalVehiculo.setText("Eliminar");
        eliminarPersonalVehiculo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarPersonalVehiculoActionPerformed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Verdana Pro Cond", 1, 12)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 0, 0));
        jLabel19.setText("*Campo matrícula: \"ET\" seguido de 8 números");

        jLabel20.setFont(new java.awt.Font("Verdana Pro Cond", 1, 12)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 0, 0));
        jLabel20.setText("*Campo TIM: 11 números y una letra");

        jLabel22.setFont(new java.awt.Font("Verdana Pro Cond", 1, 12)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 0, 0));
        jLabel22.setText("*Nota: No modificar el campo ID. ");

        javax.swing.GroupLayout pestañaPersonalVehiculosLayout = new javax.swing.GroupLayout(pestañaPersonalVehiculos);
        pestañaPersonalVehiculos.setLayout(pestañaPersonalVehiculosLayout);
        pestañaPersonalVehiculosLayout.setHorizontalGroup(
            pestañaPersonalVehiculosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pestañaPersonalVehiculosLayout.createSequentialGroup()
                .addContainerGap(161, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 740, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(139, 139, 139))
            .addGroup(pestañaPersonalVehiculosLayout.createSequentialGroup()
                .addGroup(pestañaPersonalVehiculosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pestañaPersonalVehiculosLayout.createSequentialGroup()
                        .addGap(227, 227, 227)
                        .addGroup(pestañaPersonalVehiculosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pestañaPersonalVehiculosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(textIdPerVeh, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE)
                            .addComponent(textMatPerVeh))
                        .addGap(86, 86, 86)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textTimPerVeh, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57)
                        .addGroup(pestañaPersonalVehiculosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(pestañaPersonalVehiculosLayout.createSequentialGroup()
                                .addComponent(modificarPersonalVehiculo)
                                .addGap(18, 18, 18)
                                .addComponent(jButton2))
                            .addGroup(pestañaPersonalVehiculosLayout.createSequentialGroup()
                                .addComponent(insertPersonalVehiculo, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(eliminarPersonalVehiculo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(pestañaPersonalVehiculosLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel19)
                        .addGap(49, 49, 49)
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pestañaPersonalVehiculosLayout.setVerticalGroup(
            pestañaPersonalVehiculosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pestañaPersonalVehiculosLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(pestañaPersonalVehiculosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(insertPersonalVehiculo)
                    .addComponent(eliminarPersonalVehiculo)
                    .addComponent(textIdPerVeh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(textTimPerVeh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pestañaPersonalVehiculosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(modificarPersonalVehiculo)
                    .addComponent(jButton2)
                    .addComponent(jLabel10)
                    .addComponent(textMatPerVeh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                .addGroup(pestañaPersonalVehiculosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(jLabel20)
                    .addComponent(jLabel22))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Personal_Vehiculos", pestañaPersonalVehiculos);

        pestañaTelefonos.setBackground(new java.awt.Color(0, 102, 102));

        jLabel11.setText("ID");

        jLabel12.setText("Numero de teléfono");

        jLabel13.setText("TIM");

        insertarTelefono.setText("Insertar");
        insertarTelefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertarTelefonoActionPerformed(evt);
            }
        });

        modificarTelefono.setText("Modificar");
        modificarTelefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarTelefonoActionPerformed(evt);
            }
        });

        tablaTelefono.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Número de teléfono", "TIM"
            }
        ));
        tablaTelefono.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaTelefonoMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tablaTelefono);

        jButton8.setText("Registros");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        eliminarTelefono.setText("Eliminar");
        eliminarTelefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarTelefonoActionPerformed(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Verdana Pro Cond", 1, 12)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 0, 0));
        jLabel21.setText("*Campo TIM: 11 números y una letra");

        jLabel23.setFont(new java.awt.Font("Verdana Pro Cond", 1, 12)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 0, 0));
        jLabel23.setText("*Nota: No modificar el campo ID. ");

        javax.swing.GroupLayout pestañaTelefonosLayout = new javax.swing.GroupLayout(pestañaTelefonos);
        pestañaTelefonos.setLayout(pestañaTelefonosLayout);
        pestañaTelefonosLayout.setHorizontalGroup(
            pestañaTelefonosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pestañaTelefonosLayout.createSequentialGroup()
                .addContainerGap(144, Short.MAX_VALUE)
                .addGroup(pestañaTelefonosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pestañaTelefonosLayout.createSequentialGroup()
                        .addGroup(pestañaTelefonosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(pestañaTelefonosLayout.createSequentialGroup()
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textTel, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pestañaTelefonosLayout.createSequentialGroup()
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(textIdTel, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(50, 50, 50)
                        .addGroup(pestañaTelefonosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(modificarTelefono)
                            .addGroup(pestañaTelefonosLayout.createSequentialGroup()
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(textTimTel, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(insertarTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(pestañaTelefonosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(eliminarTelefono, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(40, 40, 40))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 733, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(163, 163, 163))
            .addGroup(pestañaTelefonosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pestañaTelefonosLayout.setVerticalGroup(
            pestañaTelefonosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pestañaTelefonosLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(pestañaTelefonosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(eliminarTelefono, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pestañaTelefonosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(insertarTelefono)
                        .addComponent(textIdTel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel11)
                        .addComponent(textTimTel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel13)))
                .addGap(18, 18, 18)
                .addGroup(pestañaTelefonosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(modificarTelefono)
                    .addComponent(jButton8)
                    .addComponent(jLabel12)
                    .addComponent(textTel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                .addGroup(pestañaTelefonosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(jLabel23))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Telefonos", pestañaTelefonos);

        jLabel14.setFont(new java.awt.Font("Verdana Pro Cond", 1, 36)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("PERSONAL");

        //jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/Insignia militar.png"))); // NOI18N

        //jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/Insignia militar.png"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel14)
                .addGap(450)
                .addComponent(jLabel16)
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(botonArmamento, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(botonVehiculos, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(botonTransmisiones, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(botonConsultas, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(botonMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1040, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 103, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonMenu)
                    .addComponent(botonConsultas)
                    .addComponent(botonTransmisiones)
                    .addComponent(botonVehiculos)
                    .addComponent(botonArmamento))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1100, 760));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonMenuActionPerformed
        
        //Boton que nos lleva al menu principal 
        menuUI = new MenuUI();
        menuUI.setVisible(true);
        dispose();
        
    }//GEN-LAST:event_botonMenuActionPerformed

    private void textRanPerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textRanPerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textRanPerActionPerformed

    private void textIdPerVehActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textIdPerVehActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textIdPerVehActionPerformed

    private void insertarTelefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertarTelefonoActionPerformed
        
        
        //Verificamos el campo Tim, y que los campos no esten vacios
        if(textTimTel.getText().length()!=12 || Character.isLetter(textTimTel.getText().charAt(11))==false){
            
           JOptionPane.showMessageDialog(null, "El formato del campo TIM no es correcto");
           
        }else if(!"".equals(textTel.getText()) || !"".equals(textTimTel.getText())){
           
            telefonoClass.setNumeroTelefono(Integer.parseInt(textTel.getText()));
            telefonoClass.setTIM(textTimTel.getText());
            
            //Añadimos el registro
            personal.insertarTelefono(telefonoClass);
            listaDeTelefono();
            limpiarTelefono();
            JOptionPane.showMessageDialog(null, "Registro introducido"); 
            
        }else{
            
            JOptionPane.showMessageDialog(null, "Hay campos sin rellenar");  
        }
        
    }//GEN-LAST:event_insertarTelefonoActionPerformed

    private void insertPersonalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertPersonalActionPerformed
        
        //Variable boolean para comprobar si exsite el campo tim
        boolean existe=false; 
        //Verificamos el formato del campo dniy tim
        if(textTimPer.getText().length()!=12 || Character.isLetter(textTimPer.getText().charAt(11))==false){
            
            JOptionPane.showMessageDialog(null, "El formato del campo TIM no es correcto");
            
        } else if(textDniPer.getText().length()!=9 || Character.isLetter(textDniPer.getText().charAt(8))==false){
            
            JOptionPane.showMessageDialog(null, "El formato del campo DNI  no es correcto");
            
        }else if(!"".equals(textTimPer.getText()) && !"".equals(textNomPer.getText())
                && !"".equals(textApPer1.getText()) && !"".equals(textApPer2.getText())
                && !"".equals(textDniPer.getText()) && !"".equals(textRanPer.getText())
                && !"".equals(textNomPer.getText())){
            
            //Buscamos en la tabla si exsite un registro con el mismo campo Tim
            for(int i=0; i<tablaPersonal.getRowCount(); i++){
                String timTabla = tablaPersonal.getValueAt(i, 0).toString();
                if(textTimPer.getText().equals(timTabla)){
                    existe = true; 
                    }
            }
            
            if(existe==true){
                 JOptionPane.showMessageDialog(null, "Ya existe un registro "
                         + "con el mismo campo TIM");
            }else{
                //Introducimos los registros
                personalClass.setTIM(textTimPer.getText());
                personalClass.setNombre(textNomPer.getText());
                personalClass.setPrimerApellido(textApPer1.getText());
                personalClass.setSegundoApellido(textApPer2.getText());
                personalClass.setDNI(textDniPer.getText());
                personalClass.setRango(textRanPer.getText());
                personalClass.setEstado(textEstPer.getText());
            
                //añadimos el registro 
                personal.insertarPersonal(personalClass);
                listaDePersonal();
                limpiarPersonal();
                JOptionPane.showMessageDialog(null, "Registro introducido"); 
            }
        }else{
            
            JOptionPane.showMessageDialog(null, "Hay campos sin rellenar");
        }
        
        
        
    }//GEN-LAST:event_insertPersonalActionPerformed

    private void insertPersonalVehiculoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertPersonalVehiculoActionPerformed
        
        char letraE = 'E';
        char letraF = 'T';
        /*Verificamos que los campos no esten vacios, e insertamos el registro
        Tambien comprobamos el formato de los campos*/
        if(textMatPerVeh.getText().length()!=10 || textMatPerVeh.getText().charAt(0)!=letraE
                || textMatPerVeh.getText().charAt(1)!=letraF){
            
            JOptionPane.showMessageDialog(null, "El formato del campo matricula  no es correcto");
            
        }if(textTimPerVeh.getText().length()!=12 || Character.isLetter(textTimPerVeh.getText().charAt(11))==false){
            
            JOptionPane.showMessageDialog(null, "El formato del campo TIM no es correcto");
            
        }else if(!"".equals(textTimPerVeh.getText()) || !"".equals(textMatPerVeh.getText())){
            
            personalVehiculoClass.setTIM(textTimPerVeh.getText());
            personalVehiculoClass.setMatriculaVehiculo(textMatPerVeh.getText());
            
            //añadimos el registro 
            personal.insertarPersonalVehiculos(personalVehiculoClass);
            listaDePersonalVehiculo();
            limpiarPersonalVehiculo();
            JOptionPane.showMessageDialog(null, "Registro introducido"); 
            
        }else{
            JOptionPane.showMessageDialog(null, "Hay campos sin rellenar"); 
        }
        
    }//GEN-LAST:event_insertPersonalVehiculoActionPerformed

    private void BotonRegistrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonRegistrosActionPerformed
        //Listamos el personal
        listaDePersonal();
    }//GEN-LAST:event_BotonRegistrosActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        //Listamos el personal vehiculo
        listaDePersonalVehiculo();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        //Listamos los telefonos
        listaDeTelefono();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void tablaPersonalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaPersonalMouseClicked
        
        //Pinchando en la fila, añadimos los valores de la tabla los Jtextfield
        int fila = tablaPersonal.rowAtPoint(evt.getPoint());
        textTimPer.setText(tablaPersonal.getValueAt(fila, 0).toString());
        textNomPer.setText(tablaPersonal.getValueAt(fila, 1).toString());
        textApPer1.setText(tablaPersonal.getValueAt(fila, 2).toString());
        textApPer2.setText(tablaPersonal.getValueAt(fila, 3).toString());
        textDniPer.setText(tablaPersonal.getValueAt(fila, 4).toString());
        textRanPer.setText(tablaPersonal.getValueAt(fila, 5).toString());
        textEstPer.setText(tablaPersonal.getValueAt(fila, 6).toString());
        
    }//GEN-LAST:event_tablaPersonalMouseClicked

    private void eliminarPersonalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarPersonalActionPerformed
        
        //Verificamos que el campo Tim no este vacio, para eliminar el registro
        if(!"".equals(textTimPer.getText())){
            //Realizamos pregunta de seguridad antes de borrar el registro
            int pregunta = JOptionPane.showConfirmDialog(null,
                    "Se eliminará el registro. ¿Estas seguro? ");
            //Eliminamos el registro
            if(pregunta==0){
                String TIM = textTimPer.getText();
                personal.eliminarPersonal(TIM);
                listaDePersonal();
                limpiarPersonal();
                JOptionPane.showMessageDialog(null, "Registro eliminado"); 
            }
              
        }
        
    }//GEN-LAST:event_eliminarPersonalActionPerformed

    private void tablaPersonalVehiculoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaPersonalVehiculoMouseClicked
        
        //Pinchando en la fila, añadimos los valores de la tabla los Jtextfield
        int fila = tablaPersonalVehiculo.rowAtPoint(evt.getPoint());
        textIdPerVeh.setText(tablaPersonalVehiculo.getValueAt(fila, 0).toString());
        textTimPerVeh.setText(tablaPersonalVehiculo.getValueAt(fila, 1).toString());
        textMatPerVeh.setText(tablaPersonalVehiculo.getValueAt(fila, 2).toString());
         
    }//GEN-LAST:event_tablaPersonalVehiculoMouseClicked

    private void eliminarPersonalVehiculoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarPersonalVehiculoActionPerformed
        
        //Verificamos que el campo Id no este vacio antes de eliminar el registro
        if(!"".equals(textIdPerVeh.getText())){
            
            //Realizamos pregunta de seguridad
            int pregunta = JOptionPane.showConfirmDialog(null,
                    "Se eliminará el registro. ¿Estas seguro? ");
            
            if(pregunta==0){
                String Id = textIdPerVeh.getText();
                personal.eliminarPersonalVehiculo(Id);
                listaDePersonalVehiculo();
                limpiarPersonalVehiculo(); 
                JOptionPane.showMessageDialog(null, "Registro eliminado"); 
            }
             
        }
           
    }//GEN-LAST:event_eliminarPersonalVehiculoActionPerformed

    private void tablaTelefonoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaTelefonoMouseClicked
        
        //Pinchando en la fila, añadimos los valores de la tabla los Jtextfield
        int fila = tablaTelefono.rowAtPoint(evt.getPoint());
        textIdTel.setText(tablaTelefono.getValueAt(fila, 0).toString());
        textTel.setText(tablaTelefono.getValueAt(fila, 1).toString());
        textTimTel.setText(tablaTelefono.getValueAt(fila, 2).toString());
        
    }//GEN-LAST:event_tablaTelefonoMouseClicked

    private void eliminarTelefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarTelefonoActionPerformed
        
        //Verificamos que el campo Id no este vacio para eliminar el registro
        if(!"".equals(textIdTel.getText())){
            
            //Realizamos pregunta de seguridad para antes de borrar el registro
            int pregunta = JOptionPane.showConfirmDialog(null,
                    "Se eliminará el registro. ¿Estas seguro? ");
            
            if(pregunta==0){
                String Id = textIdTel.getText();
                personal.eliminarTelefono(Id);
                listaDeTelefono();
                limpiarTelefono(); 
                JOptionPane.showMessageDialog(null, "Registro eliminado"); 
            }
               
        }
              
    }//GEN-LAST:event_eliminarTelefonoActionPerformed

    private void ModificarPersonalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModificarPersonalActionPerformed
        
        //Verificamos el formato del campo Tim, y del campo dni. 
        if("".equals(textTimPer.getText())){
            
            JOptionPane.showMessageDialog(null, "No ha "
                    + "seleccionado ningun registro");
            
        //Ademas, verificamos que los demas campos no esten vacios   
        }if(textTimPer.getText().length()!=12 || Character.isLetter(textTimPer.getText().charAt(11))==false){
            
            JOptionPane.showMessageDialog(null, "El formato del campo TIM no es correcto");
            
        }else if(textDniPer.getText().length()!=9 || Character.isLetter(textDniPer.getText().charAt(8))==false){
            
            JOptionPane.showMessageDialog(null, "El formato del campo DNI  no es correcto");
            
        }else if (!"".equals(textNomPer.getText()) && !"".equals(textApPer1.getText()) 
                && !"".equals(textApPer2.getText()) && !"".equals(textDniPer.getText()) 
                && !"".equals(textRanPer.getText()) && !"".equals(textRanPer.getText())){
            
            //Modificamos el registro con los nuevos datos
            personalClass.setTIM(textTimPer.getText());
            personalClass.setNombre(textNomPer.getText());
            personalClass.setPrimerApellido(textApPer1.getText());
            personalClass.setSegundoApellido(textApPer2.getText());
            personalClass.setDNI(textDniPer.getText());
            personalClass.setRango(textRanPer.getText());
            personalClass.setEstado(textEstPer.getText());
            
            personal.modificarPersonal(personalClass);
            limpiarPersonal();
            listaDePersonal(); 
            JOptionPane.showMessageDialog(null, "Registro modificado"); 
            
        }else{ 
            JOptionPane.showMessageDialog(null, "Hay campos sin rellenar");
            
        }
        
    }//GEN-LAST:event_ModificarPersonalActionPerformed

    private void modificarPersonalVehiculoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarPersonalVehiculoActionPerformed
        
        char letraE = 'E';
        char letraT = 'T';
        
        //Verificamos que el campo Id no este vacio
        if("".equals(textIdPerVeh.getText())){
            
            JOptionPane.showMessageDialog(null, "No ha "
                    + "seleccionado ningun registro");
        
            //Ademas verificamos que los demas campos, no esten vacios
        }else if(textMatPerVeh.getText().length()!=10 || textMatPerVeh.getText().charAt(0)!=letraE
                || textMatPerVeh.getText().charAt(1)!=letraT){
            
            JOptionPane.showMessageDialog(null, "El formato del campo matricula  no es correcto");
            
        }else if(textTimPerVeh.getText().length()!=12 || Character.isLetter(textTimPerVeh.getText().charAt(11))==false){
            
            JOptionPane.showMessageDialog(null, "El formato del campo TIM no es correcto");
            
        }else if (!"".equals(textTimPerVeh.getText())
                && !"".equals(textMatPerVeh.getText())){
            
            //Modificamos el registro con los nuevos datos
            personalVehiculoClass.setId(Integer.parseInt(textIdPerVeh.getText()));
            personalVehiculoClass.setTIM(textTimPerVeh.getText());
            personalVehiculoClass.setMatriculaVehiculo(textMatPerVeh.getText());
           
            personal.modificarPersonalVehiculo(personalVehiculoClass);
                limpiarPersonalVehiculo();
                listaDePersonalVehiculo(); 
                JOptionPane.showMessageDialog(null, "Registro modificado"); 
            
        }else{           
            JOptionPane.showMessageDialog(null, "Hay campos sin rellenar");
        }
        
    }//GEN-LAST:event_modificarPersonalVehiculoActionPerformed

    private void modificarTelefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarTelefonoActionPerformed
        
        //Verificamos que el id no este vacio
        if("".equals(textIdTel.getText())){
            
            JOptionPane.showMessageDialog(null, "No ha "
                    + "seleccionado ningun registro");
        
        //Verificamos que los otros campos no esten vacios y su formato
        }else if(textTimTel.getText().length()!=12 || Character.isLetter(textTimTel.getText().charAt(11))==false){
            
            JOptionPane.showMessageDialog(null, "El formato del campo TIM no es correcto");
            
        }else if (!"".equals(textTel.getText())
                && !"".equals(textTimTel.getText())){
            
            //Introducimos los nuevos datos en el registro
            telefonoClass.setId(Integer.parseInt(textIdTel.getText()));
            telefonoClass.setNumeroTelefono(Integer.parseInt(textTel.getText()));
            telefonoClass.setTIM(textTimTel.getText());
           
            personal.modificarTelefonos(telefonoClass);
                limpiarTelefono();
                listaDeTelefono(); 
                JOptionPane.showMessageDialog(null, "Registro modificado"); 
            
        }else{  
            JOptionPane.showMessageDialog(null, "Rellene los campos");  
        }
          
    }//GEN-LAST:event_modificarTelefonoActionPerformed

    private void botonVehiculosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonVehiculosActionPerformed
        // boton que nos lleva a vehiculos
        vehiculosUI= new VehiculosUI();
        vehiculosUI.setVisible(true);
        dispose();
    }//GEN-LAST:event_botonVehiculosActionPerformed

    private void botonArmamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonArmamentoActionPerformed
        //boton que nos lleva a armamento
        armamentoUI = new ArmamentoUI();
        armamentoUI.setVisible(true);
        dispose();
        
    }//GEN-LAST:event_botonArmamentoActionPerformed

    private void botonTransmisionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonTransmisionesActionPerformed
        //boton que nos lleva a transmisiones
        transmisionesUI = new TransmisionesUI();
        transmisionesUI.setVisible(true);
        dispose();
        
    }//GEN-LAST:event_botonTransmisionesActionPerformed

    private void botonConsultasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonConsultasActionPerformed
        
        //boton que nos lleva a transmisiones
        consultasUI= new ConsultaUI();
        consultasUI.setVisible(true);
        dispose();
        
    }//GEN-LAST:event_botonConsultasActionPerformed

    public void limpiarPersonal(){
        //Vaciamos los jtextFielfd
        textTimPer.setText("");
        textNomPer.setText("");
        textApPer1.setText("");
        textApPer2.setText("");
        textDniPer.setText("");
        textRanPer.setText("");
        textEstPer.setText("");
        
    }
    
    public void limpiarPersonalVehiculo(){
        //Vaciamos los jtextFielfd
        textIdPerVeh.setText("");
        textTimPerVeh.setText("");
        textMatPerVeh.setText("");
        
    }
    
    public void limpiarTelefono(){
        //Vaciamos los jtextFielfd
        textIdTel.setText("");
        textTel.setText("");
        textTimTel.setText("");
        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PersonalUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PersonalUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PersonalUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PersonalUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PersonalUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonRegistros;
    private javax.swing.JButton ModificarPersonal;
    private javax.swing.JButton botonArmamento;
    private javax.swing.JButton botonConsultas;
    private javax.swing.JButton botonMenu;
    private javax.swing.JButton botonTransmisiones;
    private javax.swing.JButton botonVehiculos;
    private javax.swing.JButton eliminarPersonal;
    private javax.swing.JButton eliminarPersonalVehiculo;
    private javax.swing.JButton eliminarTelefono;
    private javax.swing.JButton insertPersonal;
    private javax.swing.JButton insertPersonalVehiculo;
    private javax.swing.JButton insertarTelefono;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton modificarPersonalVehiculo;
    private javax.swing.JButton modificarTelefono;
    private javax.swing.JPanel pestañaPersonal;
    private javax.swing.JPanel pestañaPersonalVehiculos;
    private javax.swing.JPanel pestañaTelefonos;
    private javax.swing.JTable tablaPersonal;
    private javax.swing.JTable tablaPersonalVehiculo;
    private javax.swing.JTable tablaTelefono;
    private javax.swing.JTextField textApPer1;
    private javax.swing.JTextField textApPer2;
    private javax.swing.JTextField textDniPer;
    private javax.swing.JTextField textEstPer;
    private javax.swing.JTextField textIdPerVeh;
    private javax.swing.JTextField textIdTel;
    private javax.swing.JTextField textMatPerVeh;
    private javax.swing.JTextField textNomPer;
    private javax.swing.JTextField textRanPer;
    private javax.swing.JTextField textTel;
    private javax.swing.JTextField textTimPer;
    private javax.swing.JTextField textTimPerVeh;
    private javax.swing.JTextField textTimTel;
    // End of variables declaration//GEN-END:variables
}
