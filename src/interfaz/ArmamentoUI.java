/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package interfaz;

import clases.Armamento;
import clases.ArmamentoClass;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Manuel
 */
public class ArmamentoUI extends javax.swing.JFrame {

    //Creamos los objetos que nos haran falta
    ArmamentoClass armamentoClass = new ArmamentoClass();
    Armamento armamento = new Armamento();
    DefaultTableModel tablaModelo;
    VehiculosUI vehiculosUI;
    TransmisionesUI transmisionesUI;
    PersonalUI personalUI;
    ConsultaUI consultasUI;
    MenuUI menuUI;
    
    public ArmamentoUI() {
        initComponents();
        //setIconImage(new ImageIcon(getClass().getResource("/resources/insignia.png")).getImage());
        
        this.setLocationRelativeTo(null);
    }
    
    public void listaArmamento(){
        
        /*Creamos una lista en la cual almacenaremos los datos de nuestra base de datos
        y la añadimos a la tabla de nuestra interfaz para que esten visibles*/
        List<ArmamentoClass> listaArmamento = armamento.listaArmamento();
        tablaModelo = (DefaultTableModel) tablaArmamento.getModel();
        Object[] object = new Object[6];
        
        tablaModelo.setRowCount(0);
        
       //Recorremos con un bucle for y añadimos a la tabla
       for (int i = 0; i < listaArmamento.size(); i++) {
            
            object[0] = listaArmamento.get(i).getNumArma();
            object[1] = listaArmamento.get(i).getNombreArma();
            object[2] = listaArmamento.get(i).getTipo();
            object[3] = listaArmamento.get(i).getCalibre();
            object[4] = listaArmamento.get(i).getEstadoArma();
            object[5] = listaArmamento.get(i).getTIM();
            
            
            tablaModelo.addRow(object);
            
        }
        
       tablaArmamento.setModel(tablaModelo);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        panelArmamento = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        textNumArm = new javax.swing.JTextField();
        textNomArm = new javax.swing.JTextField();
        textTipArm = new javax.swing.JTextField();
        textEstArm = new javax.swing.JTextField();
        textCalArm = new javax.swing.JTextField();
        textTimArm = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaArmamento = new javax.swing.JTable();
        InsertArma = new javax.swing.JButton();
        modificarArmamento = new javax.swing.JButton();
        eliminarArmamento = new javax.swing.JButton();
        BotonRegistros = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        botonMenu = new javax.swing.JButton();
        botonConsultas = new javax.swing.JButton();
        botonTransmisiones = new javax.swing.JButton();
        botonVehiculos = new javax.swing.JButton();
        botonPersonal = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 51, 51));

        jLabel7.setFont(new java.awt.Font("Verdana Pro Cond", 1, 36)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("ARMAMENTO");

        //jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/insignia.png"))); // NOI18N

        panelArmamento.setBackground(new java.awt.Color(0, 102, 102));

        jLabel1.setFont(new java.awt.Font("Verdana Pro Cond", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Numero de arma");

        jLabel2.setFont(new java.awt.Font("Verdana Pro Cond", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Nombre");

        jLabel3.setFont(new java.awt.Font("Verdana Pro Cond", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Tipo");

        jLabel4.setFont(new java.awt.Font("Verdana Pro Cond", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Estado");

        jLabel5.setFont(new java.awt.Font("Verdana Pro Cond", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Calibre");

        jLabel6.setFont(new java.awt.Font("Verdana Pro Cond", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("TIM");

        tablaArmamento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Número de arma", "Nombre del arma", "Tipo", "Calibre", "Estado", "TIM"
            }
        ));
        tablaArmamento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaArmamentoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaArmamento);

        InsertArma.setFont(new java.awt.Font("Verdana Pro Cond", 0, 12)); // NOI18N
        InsertArma.setText("Insertar");
        InsertArma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsertArmaActionPerformed(evt);
            }
        });

        modificarArmamento.setFont(new java.awt.Font("Verdana Pro Cond", 0, 12)); // NOI18N
        modificarArmamento.setText("Modificar");
        modificarArmamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarArmamentoActionPerformed(evt);
            }
        });

        eliminarArmamento.setFont(new java.awt.Font("Verdana Pro Cond", 0, 12)); // NOI18N
        eliminarArmamento.setText("Eliminar");
        eliminarArmamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarArmamentoActionPerformed(evt);
            }
        });

        BotonRegistros.setFont(new java.awt.Font("Verdana Pro Cond", 0, 12)); // NOI18N
        BotonRegistros.setText("Registros");
        BotonRegistros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonRegistrosActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Verdana Pro Cond", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 0, 0));
        jLabel10.setText("*Campo número de arma: \"ET\" seguido de 8 números");

        jLabel11.setFont(new java.awt.Font("Verdana Pro Cond", 1, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 0, 0));
        jLabel11.setText("*Campo TIM: 11 números y una letra");

        javax.swing.GroupLayout panelArmamentoLayout = new javax.swing.GroupLayout(panelArmamento);
        panelArmamento.setLayout(panelArmamentoLayout);
        panelArmamentoLayout.setHorizontalGroup(
            panelArmamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelArmamentoLayout.createSequentialGroup()
                .addContainerGap(41, Short.MAX_VALUE)
                .addGroup(panelArmamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelArmamentoLayout.createSequentialGroup()
                        .addGroup(panelArmamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panelArmamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(textNumArm, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textNomArm, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(panelArmamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelArmamentoLayout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addComponent(textTipArm, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelArmamentoLayout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(textCalArm, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(28, 28, 28)
                        .addGroup(panelArmamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelArmamentoLayout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(43, 43, 43)
                                .addComponent(textTimArm, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelArmamentoLayout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(textEstArm, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(67, 67, 67)
                        .addGroup(panelArmamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(InsertArma, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(modificarArmamento, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(panelArmamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BotonRegistros, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(eliminarArmamento, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 902, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36))
            .addGroup(panelArmamentoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelArmamentoLayout.setVerticalGroup(
            panelArmamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelArmamentoLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(panelArmamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eliminarArmamento)
                    .addComponent(InsertArma)
                    .addComponent(textEstArm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(textTipArm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(textNumArm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(24, 24, 24)
                .addGroup(panelArmamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(textNomArm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(textCalArm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(textTimArm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(modificarArmamento)
                    .addComponent(BotonRegistros))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(panelArmamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11))
                .addContainerGap())
        );

        //jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/insignia.png"))); // NOI18N

        botonMenu.setText("Menu");
        botonMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonMenuActionPerformed(evt);
            }
        });

        botonConsultas.setText("Consultas");
        botonConsultas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonConsultasActionPerformed(evt);
            }
        });

        botonTransmisiones.setText("Transmisiones");
        botonTransmisiones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonTransmisionesActionPerformed(evt);
            }
        });

        botonVehiculos.setText("Vehículos");
        botonVehiculos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonVehiculosActionPerformed(evt);
            }
        });

        botonPersonal.setText("Personal");
        botonPersonal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonPersonalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addGap(450)
                        .addComponent(jLabel9))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(60, 60, 60)
                                .addComponent(panelArmamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGap(135, 135, 135)
                                .addComponent(botonPersonal, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(67, 67, 67)
                                .addComponent(botonVehiculos, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(92, 92, 92)
                                .addComponent(botonTransmisiones)
                                .addGap(95, 95, 95)
                                .addComponent(botonConsultas, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(75, 75, 75)
                                .addComponent(botonMenu)))
                        .addGap(0, 55, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 114, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonMenu)
                    .addComponent(botonConsultas)
                    .addComponent(botonTransmisiones)
                    .addComponent(botonVehiculos)
                    .addComponent(botonPersonal))
                .addGap(37, 37, 37)
                .addComponent(panelArmamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1100, 760));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void InsertArmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InsertArmaActionPerformed
        
        
         /*Creamos nos variables para comprobar que esten en el campo numero de transmision
        y que ademas no exista un mismo registro con numero de arma*/
        char letraE= 'E';
        char letraT='T';
        boolean existe = false;
        
        /* verificamos que los campos no estan vacios y siguen el formato establecido
        Esto lo haremos mediante varios condicionales*/
        if(!"".equals(textNumArm.getText()) && !"".equals(textNomArm.getText())
                && !"".equals(textTipArm.getText()) && !"".equals(textCalArm.getText())
                && !"".equals(textEstArm.getText()) && !"".equals(textTimArm.getText())){
            
            if(textTimArm.getText().length()!=12 || Character.isLetter(textTimArm.getText().charAt(11))==false){
            
           JOptionPane.showMessageDialog(null, "El formato del campo TIM no es correcto");
           
            }else if(textNumArm.getText().length()!=10 || textNumArm.getText().charAt(0)!=letraE
                || textNumArm.getText().charAt(1)!=letraT){
            
            JOptionPane.showMessageDialog(null, "El formato del campo numero"
                    + " de armamento no es correcto");
            
            }else{
                //Recorremos la tabla para verificar que no exista registo igual
                for(int i=0; i<tablaArmamento.getRowCount(); i++){
                    String NarmaTabla = tablaArmamento.getValueAt(i, 0).toString();
                    if(textNumArm.getText().equals(NarmaTabla)){
                        existe = true; 
                    }
                }
                //Mensaje de error si el campo ya existe
                if(existe==true){
                    JOptionPane.showMessageDialog(null, "Ya existe un registro "
                        + "con el mismo campo numero de arma");
                }else{
                    //Introducimos lo registros 
                    armamentoClass.setNumArma(textNumArm.getText());
                    armamentoClass.setNombreArma(textNomArm.getText());
                    armamentoClass.setTipo(textTipArm.getText());
                    armamentoClass.setCalibre(textCalArm.getText());
                    armamentoClass.setEstadoArma(textEstArm.getText());
                    armamentoClass.setTIM(textTimArm.getText());
            
            
                    armamento.insertarArmamento(armamentoClass);
                    listaArmamento();
                    limpiarArmamento();
                    JOptionPane.showMessageDialog(null, "Registro introducido");
                }
            }
            
        }else if(!"".equals(textNumArm.getText()) && !"".equals(textNomArm.getText())
                && !"".equals(textTipArm.getText()) && !"".equals(textCalArm.getText())
                && !"".equals(textEstArm.getText())){
                
            if(textNumArm.getText().length()!=10 || textNumArm.getText().charAt(0)!=letraE
                || textNumArm.getText().charAt(1)!=letraT){
            
            JOptionPane.showMessageDialog(null, "El formato del campo numero"
                    + " de armamento no es correcto");
            
            }else{
                
                //Recorremos la tabla para verificar que no exista registo igual
                for(int i=0; i<tablaArmamento.getRowCount(); i++){
                    String NarmaTabla = tablaArmamento.getValueAt(i, 0).toString();
                    if(textNumArm.getText().equals(NarmaTabla)){
                        existe = true; 
                    }
                }
                //Mensaje de error si el campo ya existe
                if(existe==true){
                    JOptionPane.showMessageDialog(null, "Ya existe un registro "
                        + "con el mismo campo numero de arma");
                }else{
                
                    //Introducimos lo registros 
                    armamentoClass.setNumArma(textNumArm.getText());
                    armamentoClass.setNombreArma(textNomArm.getText());
                    armamentoClass.setTipo(textTipArm.getText());
                    armamentoClass.setCalibre(textCalArm.getText());
                    armamentoClass.setEstadoArma(textEstArm.getText());
            
                    armamento.insertarArmamento(armamentoClass);
                    listaArmamento();
                    limpiarArmamento();
                    JOptionPane.showMessageDialog(null, "Registro introducido");
                }
            }
        }else{
            
            JOptionPane.showMessageDialog(null, "Aún hay "
                    + "campos sin rellenar");
            
        }
           
    }//GEN-LAST:event_InsertArmaActionPerformed

    private void BotonRegistrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonRegistrosActionPerformed
        //Obtenemos los registros de nuestra base de datos
        listaArmamento();
        
    }//GEN-LAST:event_BotonRegistrosActionPerformed

    private void tablaArmamentoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaArmamentoMouseClicked
        
        //Obtenemos los valores al hacer click en un registro
        int fila = tablaArmamento.rowAtPoint(evt.getPoint());
        textNumArm.setText(tablaArmamento.getValueAt(fila, 0).toString());
        textNomArm.setText(tablaArmamento.getValueAt(fila, 1).toString());
        textTipArm.setText(tablaArmamento.getValueAt(fila, 2).toString());
        textCalArm.setText(tablaArmamento.getValueAt(fila, 3).toString());
        textEstArm.setText(tablaArmamento.getValueAt(fila, 4).toString());
        
        Object tim = tablaArmamento.getValueAt(fila, 5);
        if (tim != null) {
            textTimArm.setText(tim.toString());
        } else {
              textTimArm.setText("");
            }
        
        
        
    }//GEN-LAST:event_tablaArmamentoMouseClicked

    private void eliminarArmamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarArmamentoActionPerformed
        
        //Eliminamos por el numero de transmision, por tanto verificamos que no este vacio
        if(!"".equals(textNumArm.getText())){
            
            int pregunta = JOptionPane.showConfirmDialog(null,
                    "Se eliminará el registro. ¿Estas seguro? ");
            //Hacemos la pregunta de seguridad para borrar el registro
            if(pregunta==0){
                
                //Pregunta de seguridad antes de borrar el registro
                String numArma = textNumArm.getText();
                armamento.eliminarArmamento(numArma);
                listaArmamento();
                limpiarArmamento();
                 JOptionPane.showMessageDialog(null, "Registro eliminado");
                
            }
              
        }
        
    }//GEN-LAST:event_eliminarArmamentoActionPerformed

    private void modificarArmamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarArmamentoActionPerformed
        
        //Declaramos los variables de tipo char, para verificar que esten en el campo numero transmisiones
        char letraE= 'E';
        char letraT='T';
        
        /*Verificamos tanto que este un registro seleccionado, como que los campos no sean nulos
        y que estos cumplan con el formato especificado*/
        
        if("".equals(textNumArm.getText())){
            
            JOptionPane.showMessageDialog(null, "No ha "
                    + "seleccionado ningun registro");
            
        }else if(!"".equals(textNumArm.getText()) && !"".equals(textNomArm.getText())
                && !"".equals(textTipArm.getText()) && !"".equals(textCalArm.getText())
                && !"".equals(textEstArm.getText()) && !"".equals(textTimArm.getText())){
            
            if(textTimArm.getText().length()!=12 || Character.isLetter(textTimArm.getText().charAt(11))==false){
            
           JOptionPane.showMessageDialog(null, "El formato del campo TIM no es correcto");
           
            }else if(textNumArm.getText().length()!=10 || textNumArm.getText().charAt(0)!=letraE
                || textNumArm.getText().charAt(1)!=letraT){
            
            JOptionPane.showMessageDialog(null, "El formato del campo numero"
                    + " de transmision no es correcto");
            
            }else{
                //Introducimos lo registros 
                armamentoClass.setNumArma(textNumArm.getText());
                armamentoClass.setNombreArma(textNomArm.getText());
                armamentoClass.setTipo(textTipArm.getText());
                armamentoClass.setCalibre(textCalArm.getText());
                armamentoClass.setEstadoArma(textEstArm.getText());
                armamentoClass.setTIM(textTimArm.getText());
            
            
                armamento.modificarArmamento(armamentoClass);
                listaArmamento();
                limpiarArmamento();
                JOptionPane.showMessageDialog(null, "Registro modificado");
                
            }
            
        }else if(!"".equals(textNumArm.getText()) && !"".equals(textNomArm.getText())
                && !"".equals(textTipArm.getText()) && !"".equals(textCalArm.getText())
                && !"".equals(textEstArm.getText())){
                
            if(textNumArm.getText().length()!=10 || textNumArm.getText().charAt(0)!=letraE
                || textNumArm.getText().charAt(1)!=letraT){
            
            JOptionPane.showMessageDialog(null, "El formato del campo numero"
                    + " de armamento no es correcto");
            
            }else{
                //Introducimos lo registros 
                armamentoClass.setNumArma(textNumArm.getText());
                armamentoClass.setNombreArma(textNomArm.getText());
                armamentoClass.setTipo(textTipArm.getText());
                armamentoClass.setCalibre(textCalArm.getText());
                armamentoClass.setEstadoArma(textEstArm.getText());
            
            
                armamento.modificarArmamento(armamentoClass);
                listaArmamento();
                limpiarArmamento();
                JOptionPane.showMessageDialog(null, "Registro modificado");
            }
        }else{
            
            JOptionPane.showMessageDialog(null, "Rellene los campos");
           
        }
        
    }//GEN-LAST:event_modificarArmamentoActionPerformed

    private void botonPersonalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonPersonalActionPerformed
        //Vamos a la ventana de personal
        personalUI = new PersonalUI();
        personalUI.setVisible(true);
        dispose();
    }//GEN-LAST:event_botonPersonalActionPerformed

    private void botonTransmisionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonTransmisionesActionPerformed
        // Vamos a la ventana de transmisiones
        transmisionesUI = new TransmisionesUI();
        transmisionesUI.setVisible(true);
        dispose();
    }//GEN-LAST:event_botonTransmisionesActionPerformed

    private void botonVehiculosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonVehiculosActionPerformed
        // Vamos a la ventana de vehiculos
        vehiculosUI= new VehiculosUI();
        vehiculosUI.setVisible(true);
        dispose();
    }//GEN-LAST:event_botonVehiculosActionPerformed

    private void botonMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonMenuActionPerformed
        // Vamos al menu principal
        menuUI = new MenuUI();
        menuUI.setVisible(true);
        dispose();
    }//GEN-LAST:event_botonMenuActionPerformed

    private void botonConsultasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonConsultasActionPerformed
        // Vamos al menu consultas
        consultasUI= new ConsultaUI();
        consultasUI.setVisible(true);
        dispose();
    }//GEN-LAST:event_botonConsultasActionPerformed

    
    public void limpiarArmamento(){
        //Con este metodo, limpiamos los campos de los Jtexfields   
        textNumArm.setText("");
        textNomArm.setText("");
        textTipArm.setText("");
        textCalArm.setText("");
        textEstArm.setText("");
        textTimArm.setText("");
        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ArmamentoUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ArmamentoUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ArmamentoUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ArmamentoUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ArmamentoUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonRegistros;
    private javax.swing.JButton InsertArma;
    private javax.swing.JButton botonConsultas;
    private javax.swing.JButton botonMenu;
    private javax.swing.JButton botonPersonal;
    private javax.swing.JButton botonTransmisiones;
    private javax.swing.JButton botonVehiculos;
    private javax.swing.JButton eliminarArmamento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton modificarArmamento;
    private javax.swing.JPanel panelArmamento;
    private javax.swing.JTable tablaArmamento;
    private javax.swing.JTextField textCalArm;
    private javax.swing.JTextField textEstArm;
    private javax.swing.JTextField textNomArm;
    private javax.swing.JTextField textNumArm;
    private javax.swing.JTextField textTimArm;
    private javax.swing.JTextField textTipArm;
    // End of variables declaration//GEN-END:variables
}
