/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package interfaz;

import clases.Consultas;
import clases.PersonalClass;
import clases.ArmamentoClass;
import clases.TelefonosClass;
import clases.TransmisionesClass;
import clases.VehiculosClass;
import reportespdf.PlantillaPDF;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Manuel
 */
public class ConsultaUI extends javax.swing.JFrame {

    //Creamos los objetos que nos harán falta para añadirle funcionalidad a la interfaz
    DefaultTableModel tablaModelo;
    Consultas consulta = new Consultas();
    VehiculosUI vehiculosUI;
    ArmamentoUI armamentoUI;
    TransmisionesUI transmisionesUI;
    PersonalUI personalUI;
    MenuUI menuUI;
    PlantillaPDF plantilla;
    
    
    public ConsultaUI() {
        initComponents();
        //setIconImage(new ImageIcon(getClass().getResource("/resources/insignia.png")).getImage());
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        botonVehiculos = new javax.swing.JButton();
        botonTransmisiones = new javax.swing.JButton();
        botonArmamento = new javax.swing.JButton();
        botonMenu = new javax.swing.JButton();
        botonPersonal = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        panelPersonal = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaConsultaPersonal = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        textConsultaNP = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        textConsultaTIMP = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        textConsultaEP = new javax.swing.JTextField();
        botonConsultaPN = new javax.swing.JButton();
        botonConsultaPTIM = new javax.swing.JButton();
        botonConsultaPE = new javax.swing.JButton();
        botonPdfPersonal = new javax.swing.JButton();
        panelVehiculos = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        textConsultaVN = new javax.swing.JTextField();
        textConsultaVTIM = new javax.swing.JTextField();
        textConsultaVM = new javax.swing.JTextField();
        botonConsultaVN = new javax.swing.JButton();
        botonConsultaVTIM = new javax.swing.JButton();
        botonConsultaVM = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaConsultaVehiculos1 = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        tablaConsultaVehiculos2 = new javax.swing.JTable();
        jLabel14 = new javax.swing.JLabel();
        botonConsultaVE = new javax.swing.JButton();
        textConsultaVE = new javax.swing.JTextField();
        botonPdfVehiculo = new javax.swing.JButton();
        panelArmamento = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaConsultaArmamento1 = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        botonConsultaAN = new javax.swing.JButton();
        textConsultaAN = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        textConsultaTIMA = new javax.swing.JTextField();
        textConsultaANA = new javax.swing.JTextField();
        botonConsultaATIM = new javax.swing.JButton();
        botonConsultaANA = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        botonConsultaAE = new javax.swing.JButton();
        textConsultaAE = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        tablaConsultaArmamento2 = new javax.swing.JTable();
        botonPdfArmamento = new javax.swing.JButton();
        panelTransmisiones = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        textConsultaTN = new javax.swing.JTextField();
        textConsultaTNT = new javax.swing.JTextField();
        textConsultaTE = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        tablaConsultaTransmisiones1 = new javax.swing.JTable();
        botonConsultaTN = new javax.swing.JButton();
        botonConsultaTTIM = new javax.swing.JButton();
        botonConsultaTE = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        textConsultaTTIM = new javax.swing.JTextField();
        jScrollPane7 = new javax.swing.JScrollPane();
        tablaConsultaTransmisiones2 = new javax.swing.JTable();
        botonConsultaTNT = new javax.swing.JButton();
        botonPdfTranmisiones = new javax.swing.JButton();
        panelTelefonos = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        tablaConsultaTelefonos = new javax.swing.JTable();
        textConsultaTLN = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        botonConsultaTLN = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        textConsultaTLTIM = new javax.swing.JTextField();
        botonConsultaTLTIM = new javax.swing.JButton();
        

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBackground(new java.awt.Color(0, 51, 51));

        botonVehiculos.setFont(new java.awt.Font("Verdana Pro Cond", 0, 12)); // NOI18N
        botonVehiculos.setText("Vehiculos");
        botonVehiculos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonVehiculosActionPerformed(evt);
            }
        });

        botonTransmisiones.setFont(new java.awt.Font("Verdana Pro Cond", 0, 12)); // NOI18N
        botonTransmisiones.setText("Transmisiones");
        botonTransmisiones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonTransmisionesActionPerformed(evt);
            }
        });

        botonArmamento.setFont(new java.awt.Font("Verdana Pro Cond", 0, 12)); // NOI18N
        botonArmamento.setText("Armamento");
        botonArmamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonArmamentoActionPerformed(evt);
            }
        });

        botonMenu.setFont(new java.awt.Font("Verdana Pro Cond", 0, 12)); // NOI18N
        botonMenu.setText("Menu");
        botonMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonMenuActionPerformed(evt);
            }
        });

        botonPersonal.setFont(new java.awt.Font("Verdana Pro Cond", 0, 12)); // NOI18N
        botonPersonal.setText("Personal");
        botonPersonal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonPersonalActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Verdana Pro Cond", 1, 36)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("CONSULTAS");
        jLabel18.setToolTipText("");

        //jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/Insignia militar.png"))); // NOI18N

        //jLabel20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/Insignia militar.png"))); // NOI18N

        panelPersonal.setBackground(new java.awt.Color(0, 102, 102));

        tablaConsultaPersonal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "TIM", "Nombre", "Primer apellido", "Segundo apellido", "DNI", "Rango", "Estado"
            }
        ));
        jScrollPane1.setViewportView(tablaConsultaPersonal);

        jLabel1.setFont(new java.awt.Font("Verdana Pro Cond", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Nombre");

        jLabel2.setFont(new java.awt.Font("Verdana Pro Cond", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("TIM");

        jLabel3.setFont(new java.awt.Font("Verdana Pro Cond", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Estado");

        botonConsultaPN.setFont(new java.awt.Font("Verdana Pro Cond", 0, 12)); // NOI18N
        botonConsultaPN.setText("Consulta");
        botonConsultaPN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonConsultaPNActionPerformed(evt);
            }
        });

        botonConsultaPTIM.setFont(new java.awt.Font("Verdana Pro Cond", 0, 12)); // NOI18N
        botonConsultaPTIM.setText("Consulta");
        botonConsultaPTIM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonConsultaPTIMActionPerformed(evt);
            }
        });

        botonConsultaPE.setFont(new java.awt.Font("Verdana Pro Cond", 0, 12)); // NOI18N
        botonConsultaPE.setText("Consulta");
        botonConsultaPE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonConsultaPEActionPerformed(evt);
            }
        });

        botonPdfPersonal.setFont(new java.awt.Font("Verdana Pro Cond", 0, 12)); // NOI18N
        botonPdfPersonal.setText("Generar PDF");
        botonPdfPersonal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonPdfPersonalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelPersonalLayout = new javax.swing.GroupLayout(panelPersonal);
        panelPersonal.setLayout(panelPersonalLayout);
        panelPersonalLayout.setHorizontalGroup(
            panelPersonalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPersonalLayout.createSequentialGroup()
                .addGroup(panelPersonalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelPersonalLayout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(textConsultaNP, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(botonConsultaPN)
                        .addGap(53, 53, 53)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(textConsultaTIMP, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(botonConsultaPTIM)
                        .addGap(74, 74, 74)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(textConsultaEP, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(botonConsultaPE))
                    .addGroup(panelPersonalLayout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 769, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelPersonalLayout.createSequentialGroup()
                        .addGap(411, 411, 411)
                        .addComponent(botonPdfPersonal)))
                .addContainerGap(89, Short.MAX_VALUE))
        );
        panelPersonalLayout.setVerticalGroup(
            panelPersonalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPersonalLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(panelPersonalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(textConsultaNP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonConsultaPN)
                    .addComponent(botonConsultaPTIM)
                    .addComponent(textConsultaTIMP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(textConsultaEP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonConsultaPE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(botonPdfPersonal)
                .addContainerGap(128, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Personal", panelPersonal);

        panelVehiculos.setBackground(new java.awt.Color(0, 102, 102));

        jLabel7.setFont(new java.awt.Font("Verdana Pro Cond", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Nombre");

        jLabel8.setFont(new java.awt.Font("Verdana Pro Cond", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("TIM");

        jLabel9.setFont(new java.awt.Font("Verdana Pro Cond", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Matrícula");

        textConsultaVTIM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textConsultaVTIMActionPerformed(evt);
            }
        });

        botonConsultaVN.setFont(new java.awt.Font("Verdana Pro Cond", 0, 12)); // NOI18N
        botonConsultaVN.setText("Consulta");
        botonConsultaVN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonConsultaVNActionPerformed(evt);
            }
        });

        botonConsultaVTIM.setFont(new java.awt.Font("Verdana Pro Cond", 0, 12)); // NOI18N
        botonConsultaVTIM.setText("Consulta");
        botonConsultaVTIM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonConsultaVTIMActionPerformed(evt);
            }
        });

        botonConsultaVM.setFont(new java.awt.Font("Verdana Pro Cond", 0, 12)); // NOI18N
        botonConsultaVM.setText("Consulta");
        botonConsultaVM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonConsultaVMActionPerformed(evt);
            }
        });

        tablaConsultaVehiculos1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "TIM", "Nombre", "Primer apellido", "Segundo apellido", "Matricula", "Vehiculo", "Estado"
            }
        ));
        jScrollPane3.setViewportView(tablaConsultaVehiculos1);

        tablaConsultaVehiculos2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Matrícula", "Nombre", "Tipo", "Kilómetros", "Estado"
            }
        ));
        jScrollPane6.setViewportView(tablaConsultaVehiculos2);

        jLabel14.setFont(new java.awt.Font("Verdana Pro Cond", 1, 12)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Estado");

        botonConsultaVE.setFont(new java.awt.Font("Verdana Pro Cond", 0, 12)); // NOI18N
        botonConsultaVE.setText("Consulta");
        botonConsultaVE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonConsultaVEActionPerformed(evt);
            }
        });

        botonPdfVehiculo.setFont(new java.awt.Font("Verdana Pro Cond", 0, 12)); // NOI18N
        botonPdfVehiculo.setText("Generar PDF");
        botonPdfVehiculo.setToolTipText("Este boton genera unicamente pdf de la tabla inferior");
        botonPdfVehiculo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonPdfVehiculoActionPerformed(evt);
            }
        });
        
         etiquetaAvisoPDF = new javax.swing.JLabel("Los pdf los genera la tabla inferior");
         etiquetaAvisoPDF.setForeground(new java.awt.Color(255,51,51));
         etiquetaAvisoPDF.setFont(new java.awt.Font("Verdana Pro Cond", 1,14));
         
         etiquetaAvisoPDF.setBounds(235, 500, 300, 20);
         panelVehiculos.add(etiquetaAvisoPDF);
         

        javax.swing.GroupLayout panelVehiculosLayout = new javax.swing.GroupLayout(panelVehiculos);
        panelVehiculos.setLayout(panelVehiculosLayout);
        panelVehiculosLayout.setHorizontalGroup(
            panelVehiculosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelVehiculosLayout.createSequentialGroup()
                .addGroup(panelVehiculosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelVehiculosLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(panelVehiculosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(panelVehiculosLayout.createSequentialGroup()
                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addComponent(textConsultaVE))
                            .addGroup(panelVehiculosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(panelVehiculosLayout.createSequentialGroup()
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(25, 25, 25)
                                    .addComponent(textConsultaVM, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(panelVehiculosLayout.createSequentialGroup()
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(46, 46, 46)
                                    .addGroup(panelVehiculosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(botonConsultaVTIM)
                                        .addComponent(textConsultaVTIM, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(panelVehiculosLayout.createSequentialGroup()
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(27, 27, 27)
                                    .addGroup(panelVehiculosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(textConsultaVN)
                                        .addComponent(botonConsultaVN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addComponent(botonConsultaVM))
                            .addComponent(botonPdfVehiculo)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelVehiculosLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(botonConsultaVE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelVehiculosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
                    .addComponent(jScrollPane3))
                .addGap(37, 37, 37))
        );
        panelVehiculosLayout.setVerticalGroup(
            panelVehiculosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelVehiculosLayout.createSequentialGroup()
                .addGroup(panelVehiculosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelVehiculosLayout.createSequentialGroup()
                        .addContainerGap(32, Short.MAX_VALUE)
                        .addGroup(panelVehiculosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textConsultaVN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addComponent(botonConsultaVN)
                        .addGap(35, 35, 35)
                        .addGroup(panelVehiculosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8)
                            .addComponent(textConsultaVTIM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(botonConsultaVTIM)
                        .addGap(26, 26, 26)
                        .addComponent(botonPdfVehiculo)
                        .addGap(43, 43, 43)
                        .addGroup(panelVehiculosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(textConsultaVM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(botonConsultaVM)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                        .addGroup(panelVehiculosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(textConsultaVE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(botonConsultaVE)
                        .addGap(12, 12, 12))
                    .addGroup(panelVehiculosLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(43, 43, 43))
        );

        jTabbedPane1.addTab("Vehiculos", panelVehiculos);

        panelArmamento.setBackground(new java.awt.Color(0, 102, 102));

        tablaConsultaArmamento1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "TIM", "Nombre ", "Primer apellido", "Segundo apellido", "Numero de arma", "Arma", "Estado"
            }
        ));
        jScrollPane2.setViewportView(tablaConsultaArmamento1);

        jLabel4.setFont(new java.awt.Font("Verdana Pro Cond", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Nombre");

        botonConsultaAN.setFont(new java.awt.Font("Verdana Pro Cond", 0, 12)); // NOI18N
        botonConsultaAN.setText("Consulta");
        botonConsultaAN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonConsultaANActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Verdana Pro Cond", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("TIM");

        jLabel6.setFont(new java.awt.Font("Verdana Pro Cond", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Numero de arma");

        botonConsultaATIM.setFont(new java.awt.Font("Verdana Pro Cond", 0, 12)); // NOI18N
        botonConsultaATIM.setText("Consulta");
        botonConsultaATIM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonConsultaATIMActionPerformed(evt);
            }
        });

        botonConsultaANA.setFont(new java.awt.Font("Verdana Pro Cond", 0, 12)); // NOI18N
        botonConsultaANA.setText("Consulta");
        botonConsultaANA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonConsultaANAActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Verdana Pro Cond", 1, 12)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Estado");

        botonConsultaAE.setFont(new java.awt.Font("Verdana Pro Cond", 0, 12)); // NOI18N
        botonConsultaAE.setText("Consulta");
        botonConsultaAE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonConsultaAEActionPerformed(evt);
            }
        });

        tablaConsultaArmamento2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Numero de arma", "Arma", "Tipo", "Calibre", "Estado", "TIM"
            }
        ));
        jScrollPane5.setViewportView(tablaConsultaArmamento2);

        botonPdfArmamento.setFont(new java.awt.Font("Verdana Pro Cond", 0, 12)); // NOI18N
        botonPdfArmamento.setText("Generar PDF");
        botonPdfArmamento.setToolTipText("Este boton genera unicamente pdf de la tabla inferior");
        botonPdfArmamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonPdfArmamentoActionPerformed(evt);
            }
        });
        
        etiquetaAvisoPDF = new javax.swing.JLabel("Los pdf los genera la tabla inferior");
        etiquetaAvisoPDF.setForeground(new java.awt.Color(255,51,51));
        etiquetaAvisoPDF.setFont(new java.awt.Font("Verdana Pro Cond", 1,14));
         
        etiquetaAvisoPDF.setBounds(235, 460, 300, 20);
        panelArmamento.add(etiquetaAvisoPDF);

        javax.swing.GroupLayout panelArmamentoLayout = new javax.swing.GroupLayout(panelArmamento);
        panelArmamento.setLayout(panelArmamentoLayout);
        panelArmamentoLayout.setHorizontalGroup(
            panelArmamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelArmamentoLayout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addGroup(panelArmamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelArmamentoLayout.createSequentialGroup()
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(147, 147, 147))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelArmamentoLayout.createSequentialGroup()
                        .addGroup(panelArmamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelArmamentoLayout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panelArmamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(botonConsultaANA)
                                    .addComponent(textConsultaANA, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(panelArmamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(textConsultaAE, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(botonConsultaAE, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addGroup(panelArmamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(botonConsultaATIM)
                                .addGroup(panelArmamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(panelArmamentoLayout.createSequentialGroup()
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(textConsultaTIMA, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(panelArmamentoLayout.createSequentialGroup()
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(31, 31, 31)
                                        .addGroup(panelArmamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(botonConsultaAN)
                                            .addComponent(textConsultaAN, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addComponent(botonPdfArmamento))
                        .addGap(23, 23, 23)))
                .addGroup(panelArmamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 702, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 702, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39))
        );
        panelArmamentoLayout.setVerticalGroup(
            panelArmamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelArmamentoLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(panelArmamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(textConsultaAN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(botonConsultaAN)
                .addGap(39, 39, 39)
                .addGroup(panelArmamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textConsultaTIMA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addComponent(botonConsultaATIM)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(botonPdfArmamento)
                .addGap(35, 35, 35)
                .addGroup(panelArmamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(textConsultaANA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botonConsultaANA)
                .addGap(32, 32, 32)
                .addGroup(panelArmamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textConsultaAE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addGap(18, 18, 18)
                .addComponent(botonConsultaAE)
                .addGap(78, 78, 78))
            .addGroup(panelArmamentoLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Armamento", panelArmamento);

        panelTransmisiones.setBackground(new java.awt.Color(0, 102, 102));

        jLabel10.setFont(new java.awt.Font("Verdana Pro Cond", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Nombre");

        jLabel11.setFont(new java.awt.Font("Verdana Pro Cond", 1, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Numero transmision");

        jLabel12.setFont(new java.awt.Font("Verdana Pro Cond", 1, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Estado");

        textConsultaTNT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textConsultaTNTActionPerformed(evt);
            }
        });

        tablaConsultaTransmisiones1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "TIM", "Nombre", "Primer apellido", "Segundo Apellido", "Numero Transmision", "Transmision", "Estado"
            }
        ));
        jScrollPane4.setViewportView(tablaConsultaTransmisiones1);

        botonConsultaTN.setFont(new java.awt.Font("Verdana Pro Cond", 0, 12)); // NOI18N
        botonConsultaTN.setText("Consulta");
        botonConsultaTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonConsultaTNActionPerformed(evt);
            }
        });

        botonConsultaTTIM.setFont(new java.awt.Font("Verdana Pro Cond", 0, 12)); // NOI18N
        botonConsultaTTIM.setText("Consulta");
        botonConsultaTTIM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonConsultaTTIMActionPerformed(evt);
            }
        });

        botonConsultaTE.setFont(new java.awt.Font("Verdana Pro Cond", 0, 12)); // NOI18N
        botonConsultaTE.setText("Consulta");
        botonConsultaTE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonConsultaTEActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Verdana Pro Cond", 1, 12)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("TIM");

        tablaConsultaTransmisiones2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Numero", "Transmision", "Tipo", "Estado", "TIM"
            }
        ));
        jScrollPane7.setViewportView(tablaConsultaTransmisiones2);

        botonConsultaTNT.setFont(new java.awt.Font("Verdana Pro Cond", 0, 12)); // NOI18N
        botonConsultaTNT.setText("Consulta");
        botonConsultaTNT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonConsultaTNTActionPerformed(evt);
            }
        });

        botonPdfTranmisiones.setFont(new java.awt.Font("Verdana Pro Cond", 0, 12)); // NOI18N
        botonPdfTranmisiones.setText("Generar PDF");
        botonPdfTranmisiones.setToolTipText("Este boton genera unicamente pdf de la tabla inferior");
        botonPdfTranmisiones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonPdfTranmisionesActionPerformed(evt);
            }
        });
        
        etiquetaAvisoPDF = new javax.swing.JLabel("Los pdf los genera la tabla inferior");
        etiquetaAvisoPDF.setForeground(new java.awt.Color(255,51,51));
        etiquetaAvisoPDF.setFont(new java.awt.Font("Verdana Pro Cond", 1,14));
         
        etiquetaAvisoPDF.setBounds(245, 512, 300, 20);
        panelTransmisiones.add(etiquetaAvisoPDF);

        javax.swing.GroupLayout panelTransmisionesLayout = new javax.swing.GroupLayout(panelTransmisiones);
        panelTransmisiones.setLayout(panelTransmisionesLayout);
        panelTransmisionesLayout.setHorizontalGroup(
            panelTransmisionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTransmisionesLayout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addGroup(panelTransmisionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTransmisionesLayout.createSequentialGroup()
                        .addGroup(panelTransmisionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panelTransmisionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(botonConsultaTN)
                                .addGroup(panelTransmisionesLayout.createSequentialGroup()
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(77, 77, 77)
                                    .addComponent(textConsultaTN, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(botonPdfTranmisiones))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTransmisionesLayout.createSequentialGroup()
                        .addGroup(panelTransmisionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelTransmisionesLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(panelTransmisionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(textConsultaTNT, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(panelTransmisionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(botonConsultaTNT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(botonConsultaTE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(textConsultaTE))
                                    .addComponent(botonConsultaTTIM)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTransmisionesLayout.createSequentialGroup()
                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(textConsultaTTIM, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)))
                .addGroup(panelTransmisionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 712, Short.MAX_VALUE)
                    .addComponent(jScrollPane7))
                .addGap(14, 14, 14))
        );
        panelTransmisionesLayout.setVerticalGroup(
            panelTransmisionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTransmisionesLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(panelTransmisionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textConsultaTN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(18, 18, 18)
                .addComponent(botonConsultaTN)
                .addGap(32, 32, 32)
                .addGroup(panelTransmisionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(textConsultaTTIM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addGap(18, 18, 18)
                .addComponent(botonConsultaTTIM)
                .addGap(32, 32, 32)
                .addComponent(botonPdfTranmisiones)
                .addGap(27, 27, 27)
                .addGroup(panelTransmisionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textConsultaTNT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGap(18, 18, 18)
                .addComponent(botonConsultaTNT)
                .addGap(28, 28, 28)
                .addGroup(panelTransmisionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(textConsultaTE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addGap(18, 18, 18)
                .addComponent(botonConsultaTE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTransmisionesLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        jTabbedPane1.addTab("Transmisiones", panelTransmisiones);

        panelTelefonos.setBackground(new java.awt.Color(0, 102, 102));

        tablaConsultaTelefonos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "TIM", "Nombre", "Primer apellido", "Segundo apellido", "Telefono"
            }
        ));
        jScrollPane8.setViewportView(tablaConsultaTelefonos);

        jLabel16.setFont(new java.awt.Font("Verdana Pro Cond", 1, 12)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Nombre");

        botonConsultaTLN.setFont(new java.awt.Font("Verdana Pro Cond", 0, 12)); // NOI18N
        botonConsultaTLN.setText("Consulta");
        botonConsultaTLN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonConsultaTLNActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Verdana Pro Cond", 1, 12)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("TIM");

        botonConsultaTLTIM.setFont(new java.awt.Font("Verdana Pro Cond", 0, 12)); // NOI18N
        botonConsultaTLTIM.setText("Consulta");
        botonConsultaTLTIM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonConsultaTLTIMActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelTelefonosLayout = new javax.swing.GroupLayout(panelTelefonos);
        panelTelefonos.setLayout(panelTelefonosLayout);
        panelTelefonosLayout.setHorizontalGroup(
            panelTelefonosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTelefonosLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(textConsultaTLN, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botonConsultaTLN)
                .addGap(80, 80, 80)
                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(textConsultaTLTIM, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(botonConsultaTLTIM)
                .addGap(221, 221, 221))
            .addGroup(panelTelefonosLayout.createSequentialGroup()
                .addGap(164, 164, 164)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 647, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(159, Short.MAX_VALUE))
        );
        panelTelefonosLayout.setVerticalGroup(
            panelTelefonosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTelefonosLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(panelTelefonosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(textConsultaTLN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonConsultaTLN)
                    .addComponent(jLabel17)
                    .addComponent(textConsultaTLTIM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonConsultaTLTIM))
                .addGap(38, 38, 38)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(167, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Telefonos", panelTelefonos);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(378, 378, 378)
                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(botonPersonal)
                        .addGap(18, 18, 18)
                        .addComponent(botonArmamento)
                        .addGap(18, 18, 18)
                        .addComponent(botonVehiculos)
                        .addGap(18, 18, 18)
                        .addComponent(botonTransmisiones)
                        .addGap(18, 18, 18)
                        .addComponent(botonMenu))
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(66, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 85, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonMenu)
                    .addComponent(botonTransmisiones)
                    .addComponent(botonVehiculos)
                    .addComponent(botonArmamento)
                    .addComponent(botonPersonal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1100, 760));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonConsultaPNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonConsultaPNActionPerformed
        //Llamamos al metodo para que se ejecute al pulsar el boton
        consultaPersonalNombre();
        limpiarDatosPersonal();
        
    }//GEN-LAST:event_botonConsultaPNActionPerformed

    private void botonConsultaANActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonConsultaANActionPerformed
        //Llamamos al metodo para que se ejecute al pulsar el boton
        consultaArmamentoNombre();
        limpiarDatosArmamento();
        
    }//GEN-LAST:event_botonConsultaANActionPerformed

    private void botonConsultaVNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonConsultaVNActionPerformed
        //Llamamos al metodo para que se ejecute al pulsar el boton
        consultaVehiculoNombre();
        limpiarDatosVehiculo();
    }//GEN-LAST:event_botonConsultaVNActionPerformed

    private void botonConsultaTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonConsultaTNActionPerformed
        // //Llamamos al metodo para que se ejecute al pulsar el boton
        consultaTransmisionesNombre();
        limpiarDatosTransmisiones();
    }//GEN-LAST:event_botonConsultaTNActionPerformed

    private void botonConsultaPTIMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonConsultaPTIMActionPerformed
        //Llamamos al metodo para que se ejecute al pulsar el boton
        consultaPersonalTIM();
        limpiarDatosPersonal();
        
    }//GEN-LAST:event_botonConsultaPTIMActionPerformed

    private void botonConsultaPEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonConsultaPEActionPerformed
        //Llamamos al metodo para que se ejecute al pulsar el boton
        consultaPersonalEstado();
        limpiarDatosPersonal();
        
    }//GEN-LAST:event_botonConsultaPEActionPerformed

    private void botonConsultaATIMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonConsultaATIMActionPerformed
        //Llamamos al metodo para que se ejecute al pulsar el boton
        consultaArmamentoTIM();
        limpiarDatosArmamento();
        
    }//GEN-LAST:event_botonConsultaATIMActionPerformed

    private void botonConsultaANAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonConsultaANAActionPerformed
        //Llamamos al metodo para que se ejecute al pulsar el boton
        consultaArmamentoNumero();
        limpiarDatosArmamento();
        
    }//GEN-LAST:event_botonConsultaANAActionPerformed

    private void botonConsultaAEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonConsultaAEActionPerformed
        //Llamamos al metodo para que se ejecute al pulsar el boton
        consultaArmamentoEstado();
        limpiarDatosArmamento();
        
    }//GEN-LAST:event_botonConsultaAEActionPerformed

    private void botonConsultaVTIMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonConsultaVTIMActionPerformed
        //Llamamos al metodo para que se ejecute al pulsar el boton
        consultaVehiculoTIM();
        limpiarDatosVehiculo();
    }//GEN-LAST:event_botonConsultaVTIMActionPerformed

    private void botonConsultaVMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonConsultaVMActionPerformed
        //Llamamos al metodo para que se ejecute al pulsar el boton
        consultaVehiculoMatricula();
        limpiarDatosVehiculo();
        
    }//GEN-LAST:event_botonConsultaVMActionPerformed

    private void botonConsultaVEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonConsultaVEActionPerformed
        //Llamamos al metodo para que se ejecute al pulsar el boton
        consultaVehiculoEstado();
        limpiarDatosVehiculo();
        
    }//GEN-LAST:event_botonConsultaVEActionPerformed

    private void botonConsultaTTIMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonConsultaTTIMActionPerformed
        //Llamamos al metodo para que se ejecute al pulsar el boton
        consultaTransmisionesTIM(); 
        limpiarDatosTransmisiones();
    }//GEN-LAST:event_botonConsultaTTIMActionPerformed

    private void textConsultaTNTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textConsultaTNTActionPerformed
        // TODO add your handling code here:
          
    }//GEN-LAST:event_textConsultaTNTActionPerformed

    private void botonConsultaTNTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonConsultaTNTActionPerformed
        //Llamamos al metodo para que se ejecute al pulsar el boton
        consultaTransmisionesNumero();
        limpiarDatosTransmisiones();
    }//GEN-LAST:event_botonConsultaTNTActionPerformed

    private void botonConsultaTEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonConsultaTEActionPerformed
        //Llamamos al metodo para que se ejecute al pulsar el boton
        consultaTransmisionEstado();
        limpiarDatosTransmisiones();
    }//GEN-LAST:event_botonConsultaTEActionPerformed

    private void botonConsultaTLNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonConsultaTLNActionPerformed
        //Llamamos al metodo para que se ejecute al pulsar el boton
        consultaTelefonosNombre();
        limpiarDatosTelefono();
    }//GEN-LAST:event_botonConsultaTLNActionPerformed

    private void botonConsultaTLTIMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonConsultaTLTIMActionPerformed
        //Llamamos al metodo para que se ejecute al pulsar el boton
        consultaTelefonosTIM();
        limpiarDatosTelefono();
    }//GEN-LAST:event_botonConsultaTLTIMActionPerformed

    private void botonPdfPersonalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonPdfPersonalActionPerformed
        //Llamamos al metodo para que se ejecute al pulsar el boton
        plantilla = new PlantillaPDF();
        plantilla.plantillaPdfPersonal(tablaConsultaPersonal);
        
    }//GEN-LAST:event_botonPdfPersonalActionPerformed

    private void botonTransmisionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonTransmisionesActionPerformed
        //Boton que nos lleva a transmisiones
        transmisionesUI = new TransmisionesUI();
        transmisionesUI.setVisible(true);
        dispose();
    }//GEN-LAST:event_botonTransmisionesActionPerformed

    private void botonVehiculosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonVehiculosActionPerformed
        // Boton que nos lleva a vehiculos
        vehiculosUI= new VehiculosUI();
        vehiculosUI.setVisible(true);
        dispose();

    }//GEN-LAST:event_botonVehiculosActionPerformed

    private void botonMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonMenuActionPerformed
        // Boton que nos lleva al menu principal 
        menuUI = new MenuUI();
        menuUI.setVisible(true);
        dispose();
    }//GEN-LAST:event_botonMenuActionPerformed

    private void botonPersonalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonPersonalActionPerformed
        // Boton que nos lleva a personal 
        personalUI = new PersonalUI();
        personalUI.setVisible(true);
        dispose();
    }//GEN-LAST:event_botonPersonalActionPerformed

    private void botonArmamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonArmamentoActionPerformed
        //Boton que nos lleva a armamento 
        armamentoUI = new ArmamentoUI();
        armamentoUI.setVisible(true);
        dispose();

    }//GEN-LAST:event_botonArmamentoActionPerformed

    private void botonPdfVehiculoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonPdfVehiculoActionPerformed
        //Llamamos al metodo para que se ejecute al pulsar el boton
        plantilla= new PlantillaPDF();
        plantilla.plantillaVehiculos(tablaConsultaVehiculos2);
    }//GEN-LAST:event_botonPdfVehiculoActionPerformed

    private void botonPdfArmamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonPdfArmamentoActionPerformed
        //Llamamos al metodo para que se ejecute al pulsar el boton
        plantilla = new PlantillaPDF();
        plantilla.plantillaArmamento(tablaConsultaArmamento2);
    }//GEN-LAST:event_botonPdfArmamentoActionPerformed

    private void botonPdfTranmisionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonPdfTranmisionesActionPerformed
        //Llamamos al metodo para que se ejecute al pulsar el boton
        plantilla = new PlantillaPDF();
        plantilla.plantillaTransmisiones(tablaConsultaTransmisiones2);
    }//GEN-LAST:event_botonPdfTranmisionesActionPerformed

    private void textConsultaVTIMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textConsultaVTIMActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textConsultaVTIMActionPerformed

    public void consultaPersonalNombre(){
        //Creamos una lista para guardar los datos de la consulta
        List <PersonalClass> consultaPersonalNombre = consulta.consultaPersonalNombre(textConsultaNP.getText());
        tablaModelo = (DefaultTableModel) tablaConsultaPersonal.getModel();
        Object[] object = new Object[7];
       
        tablaModelo.setRowCount(0);
        
        if(consultaPersonalNombre.isEmpty()){
            JOptionPane.showMessageDialog(null, "Registro no encontrado");
        }else{
        for (int i = 0; i < consultaPersonalNombre.size(); i++) {
            
            object[0] = consultaPersonalNombre.get(i).getTIM();
            object[1] = consultaPersonalNombre.get(i).getNombre();
            object[2] = consultaPersonalNombre.get(i).getPrimerApellido();
            object[3] = consultaPersonalNombre.get(i).getSegundoApellido();
            object[4] = consultaPersonalNombre.get(i).getDNI();
            object[5] = consultaPersonalNombre.get(i).getRango();
            object[6] = consultaPersonalNombre.get(i).getEstado();
            
            tablaModelo.addRow(object);
                }
        }
        
        tablaConsultaPersonal.setModel(tablaModelo);
    }
    
    public void consultaPersonalTIM(){
        //Creamos una lista para guardar los datos de la consulta
        List <PersonalClass> consultaPersonalTIM = consulta.consultaPersonalTIM(textConsultaTIMP.getText());
        tablaModelo = (DefaultTableModel) tablaConsultaPersonal.getModel();
        Object[] object = new Object[7];
       
        tablaModelo.setRowCount(0);
        
        if(consultaPersonalTIM.isEmpty()){
            JOptionPane.showMessageDialog(null, "Registro no encontrado");
        }else{
        for (int i = 0; i < consultaPersonalTIM.size(); i++) {
            //Recorremos los registros, añadiendolos al Object
            object[0] = consultaPersonalTIM.get(i).getTIM();
            object[1] = consultaPersonalTIM.get(i).getNombre();
            object[2] = consultaPersonalTIM.get(i).getPrimerApellido();
            object[3] = consultaPersonalTIM.get(i).getSegundoApellido();
            object[4] = consultaPersonalTIM.get(i).getDNI();
            object[5] = consultaPersonalTIM.get(i).getRango();
            object[6] = consultaPersonalTIM.get(i).getEstado();
            //Añadimos el objeto a la tabla 
            tablaModelo.addRow(object);
            }
        }
        //Añadimos la tabla, a la tabla de nuestra interfaz
        tablaConsultaPersonal.setModel(tablaModelo);
        
    }
    
    public void consultaPersonalEstado(){
        //Creamos una lista para guardar los datos de la consulta
        List <PersonalClass> consulatPersonalEstado = consulta.consultaPersonalEstado(textConsultaEP.getText());
        tablaModelo = (DefaultTableModel) tablaConsultaPersonal.getModel();
        Object[] object = new Object[7];
       
        tablaModelo.setRowCount(0);
        
        if(consulatPersonalEstado.isEmpty()){
            JOptionPane.showMessageDialog(null, "Registro no encontrado");
        }else{
        //Recorremos los registros, añadiendolos al Object
        for (int i = 0; i < consulatPersonalEstado.size(); i++) {
            
            object[0] = consulatPersonalEstado.get(i).getTIM();
            object[1] = consulatPersonalEstado.get(i).getNombre();
            object[2] = consulatPersonalEstado.get(i).getPrimerApellido();
            object[3] = consulatPersonalEstado.get(i).getSegundoApellido();
            object[4] = consulatPersonalEstado.get(i).getDNI();
            object[5] = consulatPersonalEstado.get(i).getRango();
            object[6] = consulatPersonalEstado.get(i).getEstado();
            
            //Añadimos el objeto a la tabla 
            tablaModelo.addRow(object);
            }
        }
        //Añadimos la tabla, a la tabla de nuestra interfaz 
        tablaConsultaPersonal.setModel(tablaModelo);
        
    }
    
    public void consultaArmamentoNombre(){
         //Creamos dos lista para guardar los datos de la consulta
        List <ArmamentoClass> consultaArmamentoNombre = consulta.consultaArmamentoNombre(textConsultaAN.getText());
        List <PersonalClass> consultaPersonalNombre = consulta.consultaPersonalNombre(textConsultaAN.getText());
        
        tablaModelo = (DefaultTableModel) tablaConsultaArmamento1.getModel();
        Object[] object = new Object[7];
       
        tablaModelo.setRowCount(0);
        
        if(consultaArmamentoNombre.isEmpty()){
            JOptionPane.showMessageDialog(null, "Registro no encontrado");
        }else{
        for (ArmamentoClass armamentoClass : consultaArmamentoNombre) {
            //Recorremos los registros, añadiendolos al Object
            object[4] = armamentoClass.getNumArma();
            object[5] = armamentoClass.getNombreArma();
            object[6] = armamentoClass.getEstadoArma();
        for (PersonalClass personalClass : consultaPersonalNombre) {
            
            object[0] = personalClass.getTIM();
            object[1] = personalClass.getNombre();
            object[2] = personalClass.getPrimerApellido();
            object[3] = personalClass.getSegundoApellido();
                
        }
        }//Añadimos el objeto a la tabla 
        tablaModelo.addRow(object);
    }
    //Añadimos la tabla, a la tabla de nuestra interfaz     
    tablaConsultaArmamento1.setModel(tablaModelo);
    
    }
    
    public void consultaArmamentoTIM(){
        //Creamos dos lista para guardar los datos de la consulta
        List <ArmamentoClass> consultaArmamentoTIM = consulta.consultaArmamentoTIM(textConsultaTIMA.getText());
        List <PersonalClass> consultaPersonalTIM = consulta.consultaPersonalTIM(textConsultaTIMA.getText());
        
        tablaModelo = (DefaultTableModel) tablaConsultaArmamento1.getModel();
        Object[] object = new Object[7];
       
        tablaModelo.setRowCount(0);
        
        if (consultaArmamentoTIM.isEmpty()){
            JOptionPane.showMessageDialog(null, "Registro no encontrado");
        }else{
        //Recorremos los registros, añadiendolos al Object
        for (ArmamentoClass armamentoClass : consultaArmamentoTIM) {
        
            object[4] = armamentoClass.getNumArma();
            object[5] = armamentoClass.getNombreArma();
            object[6] = armamentoClass.getEstadoArma();
            
        for (PersonalClass personalClass : consultaPersonalTIM) {
            
            object[0] = personalClass.getTIM();
            object[1] = personalClass.getNombre();
            object[2] = personalClass.getPrimerApellido();
            object[3] = personalClass.getSegundoApellido();
         }      
        }
        //Añadimos el objeto a la tabla
        tablaModelo.addRow(object);
    }
    //Añadimos la tabla, a la tabla de nuestra interfaz    
    tablaConsultaArmamento1.setModel(tablaModelo);
        
        
    }
    
    public void consultaArmamentoNumero(){
        //Creamos una lista para guardar los datos de la consulta
        List <ArmamentoClass> consultaArmamentoNumero = consulta.consultaArmamentoNumero(textConsultaANA.getText());
        tablaModelo = (DefaultTableModel) tablaConsultaArmamento2.getModel();
        Object[] object = new Object[6];
       
        tablaModelo.setRowCount(0);
        
        if(consultaArmamentoNumero.isEmpty()){
            JOptionPane.showMessageDialog(null, "Registro no encontrado");
        }else{
        
        for (int i = 0; i < consultaArmamentoNumero.size(); i++) {
            //Recorremos los registros, añadiendolos al Object
            object[0] = consultaArmamentoNumero.get(i).getNumArma();
            object[1] = consultaArmamentoNumero.get(i).getNombreArma();
            object[2] = consultaArmamentoNumero.get(i).getTipo();
            object[3] = consultaArmamentoNumero.get(i).getCalibre();
            object[4] = consultaArmamentoNumero.get(i).getEstadoArma();
            object[5] = consultaArmamentoNumero.get(i).getTIM();
            
            //Añadimos el objeto a la tabla
            tablaModelo.addRow(object);
            } 
        }
        //Añadimos la tabla, a la tabla de nuestra interfaz
        tablaConsultaArmamento2.setModel(tablaModelo);
           
        
    }
    
    public void consultaArmamentoEstado(){
        //Creamos una lista para guardar los datos de la consulta
        List <ArmamentoClass> consultaArmamentoEstado = consulta.consultaArmamentoEstado(textConsultaAE.getText());
        tablaModelo = (DefaultTableModel) tablaConsultaArmamento2.getModel();
        Object[] object = new Object[6];
       
        tablaModelo.setRowCount(0);
        
        if(consultaArmamentoEstado.isEmpty()){
            JOptionPane.showMessageDialog(null, "Registro no encontrado");
        }else{
            for (int i = 0; i < consultaArmamentoEstado.size(); i++) {
             //Recorremos los registros, añadiendolos al Object
                object[0] = consultaArmamentoEstado.get(i).getNumArma();
                object[1] = consultaArmamentoEstado.get(i).getNombreArma();
                object[2] = consultaArmamentoEstado.get(i).getTipo();
                object[3] = consultaArmamentoEstado.get(i).getCalibre();
                object[4] = consultaArmamentoEstado.get(i).getEstadoArma();
                object[5] = consultaArmamentoEstado.get(i).getTIM();
             //Añadimos el objeto a la tabla
            tablaModelo.addRow(object);
            }
        }
        //Añadimos la tabla, a la tabla de nuestra interfaz
        tablaConsultaArmamento2.setModel(tablaModelo);
           
    }
  
    
    public void consultaVehiculoNombre(){
        //Creamos dos lista para guardar los datos de la consulta
        List<VehiculosClass> consultaVehiculoNombre = consulta.consultaVehiculosNombre(textConsultaVN.getText());
        List <PersonalClass> consultaPersonalNombre = consulta.consultaPersonalNombre(textConsultaVN.getText());
        
        tablaModelo = (DefaultTableModel) tablaConsultaVehiculos1.getModel();
        Object[] object = new Object[7];
        
        tablaModelo.setRowCount(0);
        
        if(consultaVehiculoNombre.isEmpty()){
            JOptionPane.showMessageDialog(null, "Registro no encontrado");
        }else{
        //Recorremos los registros, añadiendolos al Object
        for (VehiculosClass vehiculoClass : consultaVehiculoNombre) {
        
            object[4] = vehiculoClass.getMatriculaVehiculo();
            object[5] = vehiculoClass.getNombreVehiculo();
            object[6] = vehiculoClass.getEstado();
            
        for (PersonalClass personal : consultaPersonalNombre) {
            
            object[0] = personal.getTIM();
            object[1] = personal.getNombre();
            object[2] = personal.getPrimerApellido();
            object[3] = personal.getSegundoApellido();
                
            }
             //Añadimos el objeto a la tabla
            tablaModelo.addRow(object);
        }
        }
        //Añadimos la tabla, a la tabla de nuestra interfaz
         tablaConsultaVehiculos1.setModel(tablaModelo);
    }
    
    public void consultaVehiculoTIM(){
        //Creamos dos lista para guardar los datos de la consulta
        List <VehiculosClass> consultaVehiculoTIM = consulta.consultaVehiculoTIM(textConsultaVTIM.getText());
        List <PersonalClass> consultaPersonalTIM = consulta.consultaPersonalTIM(textConsultaVTIM.getText());
        
        tablaModelo = (DefaultTableModel) tablaConsultaVehiculos1.getModel();
        Object[] object = new Object[7];
        
        tablaModelo.setRowCount(0);
        
        if(consultaVehiculoTIM.isEmpty()){
            JOptionPane.showMessageDialog(null, "registro no encontrado");
        }else{
         //Recorremos los registros, añadiendolos al Object
        for (VehiculosClass vehiculoClass : consultaVehiculoTIM) {
        
            object[4] = vehiculoClass.getMatriculaVehiculo();
            object[5] = vehiculoClass.getNombreVehiculo();
            object[6] = vehiculoClass.getEstado();
            
        for (PersonalClass personal : consultaPersonalTIM) {
            
            object[0] = personal.getTIM();
            object[1] = personal.getNombre();
            object[2] = personal.getPrimerApellido();
            object[3] = personal.getSegundoApellido();
                
            }
        }
            //Añadimos el objeto a la tabla
            tablaModelo.addRow(object);
        }
        //Añadimos la tabla, a la tabla de nuestra interfaz
         tablaConsultaVehiculos1.setModel(tablaModelo);
        
    }
    
    public void consultaVehiculoMatricula(){
          //Creamos una lista para guardar los datos de la consulta
        List <VehiculosClass> consultaVehiculoMatricula = consulta.consultaVehiculosMatricula(textConsultaVM.getText());
        tablaModelo = (DefaultTableModel) tablaConsultaVehiculos2.getModel();
        Object[] object = new Object[5];
       
        tablaModelo.setRowCount(0);
        
        if(consultaVehiculoMatricula.isEmpty()){
            JOptionPane.showMessageDialog(null, "registro no encontrado");
        }else{
         //Recorremos los registros, añadiendolos al Object
        for (int i = 0; i < consultaVehiculoMatricula.size(); i++) {
            
            object[0] = consultaVehiculoMatricula.get(i).getMatriculaVehiculo();
            object[1] = consultaVehiculoMatricula.get(i).getNombreVehiculo();
            object[2] = consultaVehiculoMatricula.get(i).getTipo();
            object[3] = consultaVehiculoMatricula.get(i).getKilometros();
            object[4] = consultaVehiculoMatricula.get(i).getEstado();
            
            //Añadimos el objeto a la tabla
            tablaModelo.addRow(object);
            }  
        }
         //Añadimos la tabla, a la tabla de nuestra interfaz
        tablaConsultaVehiculos2.setModel(tablaModelo);
           
        
    }
    
    public void consultaVehiculoEstado(){
         //Creamos una lista para guardar los datos de la consulta
        List <VehiculosClass> consultaVehiculoEstado = consulta.consultaVehiculosEstado(textConsultaVE.getText());
        tablaModelo = (DefaultTableModel) tablaConsultaVehiculos2.getModel();
        Object[] object = new Object[5];
       
        tablaModelo.setRowCount(0);
        
        if(consultaVehiculoEstado.isEmpty()){
            JOptionPane.showMessageDialog(null, "registro no encontrado");
        }else{
        //Recorremos los registros, añadiendolos al Object
        for (int i = 0; i < consultaVehiculoEstado.size(); i++) {
            
            object[0] = consultaVehiculoEstado.get(i).getMatriculaVehiculo();
            object[1] = consultaVehiculoEstado.get(i).getNombreVehiculo();
            object[2] = consultaVehiculoEstado.get(i).getTipo();
            object[3] = consultaVehiculoEstado.get(i).getKilometros();
            object[4] = consultaVehiculoEstado.get(i).getEstado();
            
            //Añadimos el objeto a la tabla
            tablaModelo.addRow(object);
            }  
        }
          //Añadimos la tabla, a la tabla de nuestra interfaz
        tablaConsultaVehiculos2.setModel(tablaModelo);
           
 
    }
    
    public void consultaTransmisionesNombre(){
        //Creamos dos lista para guardar los datos de la consulta

        List<TransmisionesClass> consultaTransmisionesNombre = consulta.consultaTransmisionesNombre(textConsultaTN.getText());
        List <PersonalClass> consultaPersonalNombre = consulta.consultaPersonalNombre(textConsultaTN.getText());
        
        tablaModelo = (DefaultTableModel) tablaConsultaTransmisiones1.getModel();
        Object[] object = new Object[7];
        
        tablaModelo.setRowCount(0);
        
        if(consultaTransmisionesNombre.isEmpty()){
            JOptionPane.showMessageDialog(null, "registro no encontrado");
        }else{
         //Recorremos los registros, añadiendolos al Object
        for (TransmisionesClass transmisionesClass : consultaTransmisionesNombre) {
        
            object[4] = transmisionesClass.getNumeroTransmision();
            object[5] = transmisionesClass.getNombreTransmision();
            object[6] = transmisionesClass.getEstado();
            
        for (PersonalClass personal : consultaPersonalNombre) {
            
            object[0] = personal.getTIM();
            object[1] = personal.getNombre();
            object[2] = personal.getPrimerApellido();
            object[3] = personal.getSegundoApellido();
                
            }
            //Añadimos el objeto a la tabla
            tablaModelo.addRow(object);
        }
        }
        //Añadimos la tabla, a la tabla de nuestra interfaz
         tablaConsultaTransmisiones1.setModel(tablaModelo);
        
    }
    
    public void consultaTransmisionesTIM(){
        //Creamos dos lista para guardar los datos de la consulta
        List<TransmisionesClass> consultaTransmisionesTIM = consulta.consultaTransmisionesTIM(textConsultaTTIM.getText());
        List <PersonalClass> consultaPersonalTIM = consulta.consultaPersonalTIM(textConsultaTTIM.getText());
        
        tablaModelo = (DefaultTableModel) tablaConsultaTransmisiones1.getModel();
        Object[] object = new Object[7];
        
        tablaModelo.setRowCount(0);
        
        if(consultaTransmisionesTIM.isEmpty()){
            JOptionPane.showMessageDialog(null, "registro no encontrado");
        }else{
        //Recorremos los registros, añadiendolos al Object
        for (TransmisionesClass transmisionesClass : consultaTransmisionesTIM) {
        
            object[4] = transmisionesClass.getNumeroTransmision();
            object[5] = transmisionesClass.getNombreTransmision();
            object[6] = transmisionesClass.getEstado();
            
        for (PersonalClass personal : consultaPersonalTIM) {
            
            object[0] = personal.getTIM();
            object[1] = personal.getNombre();
            object[2] = personal.getPrimerApellido();
            object[3] = personal.getSegundoApellido();
                
            }
             //Añadimos el objeto a la tabla
            tablaModelo.addRow(object);
        }
        }
        //Añadimos la tabla, a la tabla de nuestra interfaz
         tablaConsultaTransmisiones1.setModel(tablaModelo);
        
        
    }
    
    public void consultaTransmisionesNumero(){
        //Creamos una lista para guardar los datos de la consulta
        List <TransmisionesClass> consultaTransmisionesNumero = consulta.consultaTransmisionesNumero(textConsultaTNT.getText());
        tablaModelo = (DefaultTableModel) tablaConsultaTransmisiones2.getModel();
        Object[] object = new Object[5];
       
        tablaModelo.setRowCount(0);
        
        if(consultaTransmisionesNumero.isEmpty()){
            JOptionPane.showMessageDialog(null, "registro no encontrado");
        }else{
        //Recorremos los registros, añadiendolos al Object
        for (int i = 0; i < consultaTransmisionesNumero.size(); i++) {
            
            object[0] = consultaTransmisionesNumero.get(i).getNumeroTransmision();
            object[1] = consultaTransmisionesNumero.get(i).getNombreTransmision();
            object[2] = consultaTransmisionesNumero.get(i).getTipo();
            object[3] = consultaTransmisionesNumero.get(i).getEstado();
            object[4] = consultaTransmisionesNumero.get(i).getTIM();
            
             //Añadimos el objeto a la tabla
            tablaModelo.addRow(object);
            }
            
        }
         //Añadimos la tabla, a la tabla de nuestra interfaz
        tablaConsultaTransmisiones2.setModel(tablaModelo);
           
        
    }
    
    public void consultaTransmisionEstado(){
         //Creamos una lista para guardar los datos de la consulta
        List <TransmisionesClass> consultaTransmisionesEstado = consulta.consultaTransmisionEstado(textConsultaTE.getText());
        tablaModelo = (DefaultTableModel) tablaConsultaTransmisiones2.getModel();
        Object[] object = new Object[5];
       
        tablaModelo.setRowCount(0);
        
        if(consultaTransmisionesEstado.isEmpty()){
            JOptionPane.showMessageDialog(null, "registro no encontrado");
        }else{
        //Recorremos los registros, añadiendolos al Object
        for (int i = 0; i < consultaTransmisionesEstado.size(); i++) {
            
            object[0] = consultaTransmisionesEstado.get(i).getNumeroTransmision();
            object[1] = consultaTransmisionesEstado.get(i).getNombreTransmision();
            object[2] = consultaTransmisionesEstado.get(i).getTipo();
            object[3] = consultaTransmisionesEstado.get(i).getEstado();
            object[4] = consultaTransmisionesEstado.get(i).getTIM();
            
            //Añadimos el objeto a la tabla
            tablaModelo.addRow(object);
            }
            
        }
        //Añadimos la tabla, a la tabla de nuestra interfaz
        tablaConsultaTransmisiones2.setModel(tablaModelo);
             
    }
    
    public void consultaTelefonosNombre(){
        //Creamos dos lista para guardar los datos de la consulta
        List<TelefonosClass> consultaTelefonosNombre = consulta.consultaTelefonoNombre(textConsultaTLN.getText());
        List <PersonalClass> consultaPersonalNombre = consulta.consultaPersonalNombre(textConsultaTLN.getText());
        
        tablaModelo = (DefaultTableModel) tablaConsultaTelefonos.getModel();
        Object[] object = new Object[5];
        
        tablaModelo.setRowCount(0);
        
        if(consultaTelefonosNombre.isEmpty()){
            JOptionPane.showMessageDialog(null, "registro no encontrado");
        }else{
        //Recorremos los registros, añadiendolos al Object
        for (TelefonosClass telefonosClass : consultaTelefonosNombre) {
        
            object[4] = telefonosClass.getNumeroTelefono();

        for (PersonalClass personal : consultaPersonalNombre) {
            
            object[0] = personal.getTIM();
            object[1] = personal.getNombre();
            object[2] = personal.getPrimerApellido();
            object[3] = personal.getSegundoApellido();
                
            }
            //Añadimos el objeto a la tabla
            tablaModelo.addRow(object);
            }
        }
        //Añadimos la tabla, a la tabla de nuestra interfaz
         tablaConsultaTelefonos.setModel(tablaModelo);
        
    }
    
    public void consultaTelefonosTIM(){
        //Creamos dos lista para guardar los datos de la consulta
        List<TelefonosClass> consultaTelefonosTIM = consulta.consultaTelefonoTIM(textConsultaTLTIM.getText());
        List <PersonalClass> consultaPersonalTIM = consulta.consultaPersonalTIM(textConsultaTLTIM.getText());
        
        tablaModelo = (DefaultTableModel) tablaConsultaTelefonos.getModel();
        Object[] object = new Object[5];
        
        tablaModelo.setRowCount(0);
        
        if(consultaTelefonosTIM.isEmpty()){
            JOptionPane.showMessageDialog(null, "registro no encontrado");
        }else{
        //Recorremos los registros, añadiendolos al Object
        for (TelefonosClass telefonosClass : consultaTelefonosTIM) {
        
            object[4] = telefonosClass.getNumeroTelefono();

        for (PersonalClass personal : consultaPersonalTIM) {
            
            object[0] = personal.getTIM();
            object[1] = personal.getNombre();
            object[2] = personal.getPrimerApellido();
            object[3] = personal.getSegundoApellido();
                
            }
            //Añadimos el objeto a la tabla
            tablaModelo.addRow(object);
            }
        }
        //Añadimos la tabla, a la tabla de nuestra interfaz
         tablaConsultaTelefonos.setModel(tablaModelo);
        
    }
    

    public void limpiarDatosPersonal(){
        //Vaciamos los jtextFielfd
        textConsultaNP.setText("");
        textConsultaTIMP.setText("");
        textConsultaEP.setText("");
        
    }
    
    public void limpiarDatosVehiculo(){
        //Vaciamos los jtextFielfd
        textConsultaVN.setText("");
        textConsultaVM.setText("");
        textConsultaVTIM.setText("");
        textConsultaVE.setText("");
        
    }
    
    public void limpiarDatosTransmisiones(){
        //Vaciamos los jtextFielfd
        textConsultaTN.setText("");
        textConsultaTE.setText("");
        textConsultaTTIM.setText("");
        textConsultaTNT.setText("");
        
    }
    
     public void limpiarDatosArmamento(){
        //Vaciamos los jtextFielfd
        textConsultaAE.setText("");
        textConsultaAN.setText("");
        textConsultaANA.setText("");
        textConsultaTIMA.setText("");
        
    }
     
    public void limpiarDatosTelefono(){
        //Vaciamos los jtextFielfd
        textConsultaTLTIM.setText("");
        textConsultaTLN.setText("");
        
    }
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConsultaUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConsultaUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConsultaUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConsultaUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConsultaUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonArmamento;
    private javax.swing.JButton botonConsultaAE;
    private javax.swing.JButton botonConsultaAN;
    private javax.swing.JButton botonConsultaANA;
    private javax.swing.JButton botonConsultaATIM;
    private javax.swing.JButton botonConsultaPE;
    private javax.swing.JButton botonConsultaPN;
    private javax.swing.JButton botonConsultaPTIM;
    private javax.swing.JButton botonConsultaTE;
    private javax.swing.JButton botonConsultaTLN;
    private javax.swing.JButton botonConsultaTLTIM;
    private javax.swing.JButton botonConsultaTN;
    private javax.swing.JButton botonConsultaTNT;
    private javax.swing.JButton botonConsultaTTIM;
    private javax.swing.JButton botonConsultaVE;
    private javax.swing.JButton botonConsultaVM;
    private javax.swing.JButton botonConsultaVN;
    private javax.swing.JButton botonConsultaVTIM;
    private javax.swing.JButton botonMenu;
    private javax.swing.JButton botonPdfArmamento;
    private javax.swing.JButton botonPdfPersonal;
    private javax.swing.JButton botonPdfTranmisiones;
    private javax.swing.JButton botonPdfVehiculo;
    private javax.swing.JButton botonPersonal;
    private javax.swing.JButton botonTransmisiones;
    private javax.swing.JButton botonVehiculos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel panelArmamento;
    private javax.swing.JPanel panelPersonal;
    private javax.swing.JPanel panelTelefonos;
    private javax.swing.JPanel panelTransmisiones;
    private javax.swing.JPanel panelVehiculos;
    private javax.swing.JTable tablaConsultaArmamento1;
    private javax.swing.JTable tablaConsultaArmamento2;
    private javax.swing.JTable tablaConsultaPersonal;
    private javax.swing.JTable tablaConsultaTelefonos;
    private javax.swing.JTable tablaConsultaTransmisiones1;
    private javax.swing.JTable tablaConsultaTransmisiones2;
    private javax.swing.JTable tablaConsultaVehiculos1;
    private javax.swing.JTable tablaConsultaVehiculos2;
    private javax.swing.JTextField textConsultaAE;
    private javax.swing.JTextField textConsultaAN;
    private javax.swing.JTextField textConsultaANA;
    private javax.swing.JTextField textConsultaEP;
    private javax.swing.JTextField textConsultaNP;
    private javax.swing.JTextField textConsultaTE;
    private javax.swing.JTextField textConsultaTIMA;
    private javax.swing.JTextField textConsultaTIMP;
    private javax.swing.JTextField textConsultaTLN;
    private javax.swing.JTextField textConsultaTLTIM;
    private javax.swing.JTextField textConsultaTN;
    private javax.swing.JTextField textConsultaTNT;
    private javax.swing.JTextField textConsultaTTIM;
    private javax.swing.JTextField textConsultaVE;
    private javax.swing.JTextField textConsultaVM;
    private javax.swing.JTextField textConsultaVN;
    private javax.swing.JTextField textConsultaVTIM;
    private javax.swing.JLabel etiquetaAvisoPDF;
    
    // End of variables declaration//GEN-END:variables
}
